{"version":3,"sources":["UserContext.js","api.js","intro/HeroSection.js","intro/Home.js","form/Form.js","auth/Login.js","auth/Signup.js","assets/brain.jpg","friend/Friend.js","friendsC/FriendsC.js","response/Response.js","responsesC/ResponseC.js","chat/Chat.js","statement/Statement.js","statementC/StatementC.js","nav/Routes.js","nav/Navbar.js","App.js","index.js"],"names":["UserContext","React","createContext","BASE_URL","Paf","endpoint","data","method","url","headers","authorization","token","params","axios","message","response","error","Array","isArray","this","request","res","username","id","text","HeroSection","className","Home","MyForm","title","inputs","func","after","close","pres","history","useHistory","INITIAL_STATE","map","i","index","useState","formData","setFormData","formErrors","setFormErrors","handleChange","evt","target","name","value","fData","closer","onClick","data-testid","handleSubmit","a","preventDefault","success","push","errors","m","htmlFor","type","onChange","placeholder","required","length","e","Alert","color","Login","loginFunc","Signup","signupFunc","Friend","description","deleteFunc","editFunc","dropdownOpen","setDropdownOpen","form","setForm","openForm","src","avatar","alt","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","style","textDecoration","to","DropdownItem","FriendsC","friends","setFriends","useEffect","getAllFriends","getFriends","addFriend","editFriend","newFriend","pos","f","indexOf","datas","deleteFriend","splice","allFriends","Button","Response","s","ResponseC","useParams","responses","setResponses","statement","setStatement","getStatementInfo","statementy","addResponse","statement_id","parseInt","addStatementResponse","editResponse","deleteResponse","Chat","spot","setText","addText","friend_id","sendStatement","t","undefined","textAlign","autoComplete","Statement","say","fId","StatementC","statements","setStatements","getFriendInfo","friend","addStatement","addFriendStatement","editStatement","deleteStatement","Routes","currentUser","useContext","path","exact","NavBar","logoutFunc","click","setClick","handleClick","closeMobileMenu","closeMobileGuest","password","App","setToken","setCurrentUser","localStorage","getItem","jwt","decode","handleLogin","login","setItem","window","location","reload","console","handleSignup","signup","handleLogout","removeItem","getUserInfo","user","userInfo","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4db49ab.chunk.js","sourcesContent":["import React from \"react\";\n\n/** Context: provides currentUser object and setter for it throughout app. */\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","/** @format */\n\nimport axios from \"axios\";\n\nconst BASE_URL =\n  \"https://programafriend.herokuapp.com\" || \"http://localhost:3001\";\n\n\nclass Paf {\n  static token;\n  static username;\n\n  //Request builder.\n  static async request(endpoint, data = {}, method = \"get\") {\n    // console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { authorization: `Bearer ${Paf.token}` };\n    const params = method === \"get\" ? data : {};\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      // console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  ///////////////// USERS\n\n  //Login\n  static async login(data) {\n    let res = await this.request(`auth/login`, data, \"post\");\n    return res;\n  }\n\n  //Signup\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n\n    return res;\n  }\n\n  //Get user profile\n  static async getUserInfo(username) {\n    let res = await this.request(`users/${username}`);\n    return res;\n  }\n\n  ///////////////// FRIENDS\n\n  //Add a friend for a user.\n  static async addFriend(data) {\n    let res = await this.request(`friends/${Paf.username}`, data, \"post\");\n    return res;\n  }\n\n  //Get all friends for a user.\n  static async getAllFriends(username) {\n    let res = await this.request(`friends/${username}`);\n    return res;\n  }\n\n  //Get info on a specific friend\n  static async getFriendInfo(id, username) {\n    let res = await this.request(`friends/${Paf.username}/${id}`);\n    return res;\n  }\n\n  //Edit info on a friend\n  static async editFriend(id, data) {\n    let res = await this.request(\n      `friends/${Paf.username}/${id}`,\n      data,\n      \"patch\"\n    );\n    return res;\n  }\n\n  //Delete user friend.\n  static async deleteFriend(id) {\n    let data;\n    let res = await this.request(\n      `friends/${Paf.username}/${id}`,\n      data,\n      \"delete\"\n    );\n    return res;\n  }\n\n  ///////////////// STATEMENTS\n\n  //Add a statement to a friend.\n  static async addFriendStatement(data) {\n    let res = await this.request(`statements/${Paf.username}`, data, \"post\");\n    return res;\n  }\n\n  //Get info on a statment.\n  static async getStatementInfo(id) {\n    let res = await this.request(`statements/${Paf.username}/${id}`);\n    return res;\n  }\n\n  //Edit info on a statement\n  static async editStatement(id, data) {\n    let res = await this.request(\n      `statements/${Paf.username}/${id}`,\n      data,\n      \"patch\"\n    );\n    return res;\n  }\n\n  //Delete a statment.\n  static async deleteStatement(id) {\n    let data;\n    let res = await this.request(\n      `statements/${Paf.username}/${id}`,\n      data,\n      \"delete\"\n    );\n    return res;\n  }\n\n  ///////////////// RESPONSES\n\n  //Add a new response to a statement.\n  static async addStatementResponse(data) {\n    let res = await this.request(`responses/${Paf.username}`, data, \"post\");\n    return res;\n  }\n\n  //Edit info on a response\n  static async editResponse(id, data) {\n    let res = await this.request(\n      `responses/${Paf.username}/${id}`,\n      data,\n      \"patch\"\n    );\n    return res;\n  }\n\n  //Delete a response.\n  static async deleteResponse(id) {\n    let data;\n    let res = await this.request(\n      `responses/${Paf.username}/${id}`,\n      data,\n      \"delete\"\n    );\n    return res;\n  }\n\n  ///////////////// CHAT\n\n  //Chat\n  static async sendStatement(text) {\n    let res = await this.request(`chat/${Paf.username}`, text, \"post\");\n    return res;\n  }\n}\n\nexport default Paf;\n","/** @format */\n\nimport React from \"react\";\nimport \"./HeroSection.css\";\nimport \"../App.css\";\n\n//Basic hero section\n\nfunction HeroSection() {\n  return (\n    <div className=\"hero-container\">\n      <h1>PROGRAM A FRIEND</h1>\n      <p>To learn with, cope with, laugh with.</p>\n    </div>\n  );\n}\n\nexport default HeroSection;\n","/** @format */\n\nimport React from \"react\";\nimport \"../App.css\";\nimport HeroSection from \"./HeroSection\";\n\n//Basic home component.\n\nfunction Home() {\n  return (\n      <HeroSection />\n  );\n}\n\nexport default Home;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Alert } from \"reactstrap\";\nimport \"./Form.css\";\n\n//This component is used for every instances a form is need throughout the app. It accepts many different props that will adjust it's behavior.\n\n//title = title of formData\n//inputs = the different input fields this form will need to generate \n//func = the function it should execute with submitted data\n//after = where should the user be redirected after submission\n//close = When clicking X form closes.\n//id = some routes require an id, this allows you pass the id to the form.\n//pres = presets to the form, values the form should start with.\n\nfunction MyForm({\n  title,\n  inputs,\n  func,\n  after,\n  close = null,\n  id = null,\n  pres = null,\n}) {\n  const history = useHistory();\n\n  const INITIAL_STATE = {};\n\n  //fills intials state of form depending if \"pres\" were passed down as props\n  if (pres) {\n    inputs.map((i, index) => {\n      return (INITIAL_STATE[i] = pres[index]);\n    });\n  } else {\n    inputs.map((i) => {\n      return (INITIAL_STATE[i] = \"\");\n    });\n  }\n\n  const [formData, setFormData] = useState(INITIAL_STATE);\n  const [formErrors, setFormErrors] = useState([]);\n\n  //Handles form inputes, updates state from info in evt.target.\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setFormData((fData) => ({\n      ...fData,\n      [name]: value,\n    }));\n  };\n\n  //Some forms should not close, must pass \"close\" as props.\n  let closer = close ? (\n    <i className=\"fas fa-times close\" onClick={close} data-testid=\"close\"></i>\n  ) : null;\n\n  \n  //Submit form to prop func. Reroute to homepage or show errors.\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    let res;\n    if (id) {\n      res = await func(id, formData);\n    } else {\n      res = await func(formData);\n    }\n    if (res.success) {\n      setFormData(INITIAL_STATE);\n      if (closer) {\n        close();\n      }\n      if (after) {\n        history.push(after);\n      }\n    } else {\n      setFormErrors(res.errors);\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div className=\"form-inner\">\n        {closer}\n        <h3 className=\"form-title\">{title}</h3>\n        <form className=\"form-input-container\">\n          {inputs.map((m, i) => {\n            return (\n              <div className=\"form-input-group\" key={i}>\n                <label htmlFor={m}>{m}</label>\n                <input\n                  type=\"text\"\n                  name={m}\n                  className=\"form-input\"\n                  value={formData[m]}\n                  onChange={handleChange}\n                  placeholder={m}\n                  required\n                  data-testid={m}\n                ></input>\n              </div>\n            );\n          })}\n          {formErrors.length\n            ? formErrors.map((e, i) => {\n                return (\n                  <Alert color=\"danger\" key={i}>\n                    {\" \"}\n                    {e}\n                  </Alert>\n                );\n              })\n            : null}\n          <button\n            data-testid=\"button\"\n            type=\"submit\"\n            className=\"form-button\"\n            onClick={handleSubmit}\n          >\n            {title}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default MyForm;\n","/** @format */\n\nimport React from \"react\";\nimport \"./Login.css\";\nimport Form from \"../form/Form\";\n\n//Loginfunc is passed down from App.js as a prop. This component passes the loginfunc down to the form.\n\nfunction Login({ loginFunc }) {\n  return (\n    <div className=\"login-container\">\n      <Form title=\"Login\" inputs={[\"username\", \"password\"]} func={loginFunc} close={null}/>\n    </div>\n  );\n}\n\nexport default Login;\n","/** @format */\n\nimport React from \"react\";\nimport \"./Signup.css\";\nimport Form from \"../form/Form\";\n\n//SignupFunc is passed down from App.js as a prop. This component passes the signupFunc down to the form.\n\nfunction Signup({ signupFunc }) {\n  return (\n    <div className=\"signup-container\">\n      <Form\n        title=\"Sign Up\"\n        inputs={[\"username\", \"password\", \"email\", \"firstName\", \"lastName\"]}\n        func={signupFunc}\n        after='/friends'\n      />\n    </div>\n  );\n}\n\nexport default Signup;\n","export default __webpack_public_path__ + \"static/media/brain.fca87e63.jpg\";","/** @format */\n\nimport React, { useState } from \"react\";\nimport avatar from \"../assets/brain.jpg\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport Form from \"../form/Form\";\nimport \"./Friend.css\";\n\n//Renders individual friend. State for edit form and dropdown selections for each friend live here.\n\nfunction Friend({ name, description, id, deleteFunc, editFunc }) {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [form, setForm] = useState(false);\n\n  //Dropdown toggle\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  //Edit friend info form toggle.\n  const openForm = () => {setForm(true)};\n  const closeForm = () => {setForm(false)};\n\n  return (\n    <>\n      <li className=\"friend\">\n        <img src={avatar} className=\"friend-avatar\" alt=\"avatar\" />\n        <h5>{name}</h5>\n        <p className=\"friend-description\">{description}</p>\n\n        <Dropdown isOpen={dropdownOpen} toggle={toggle} className=\"drop\">\n          <DropdownToggle caret>Actions</DropdownToggle>\n          <DropdownMenu>\n            <Link style={{ textDecoration: \"none\" }} to={`/friend/${id}`}>\n              <DropdownItem onClick={openForm}>Program Friend</DropdownItem>\n            </Link>\n            <Link to={`/chat/${id}`} style={{ textDecoration: \"none\" }}>\n              <DropdownItem>Chat</DropdownItem>\n            </Link>\n            <DropdownItem onClick={openForm}>Edit Friend</DropdownItem>\n            <DropdownItem id=\"delete\" onClick={deleteFunc}>\n              Delete Friend\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </li>\n      {form ? (\n        <Form\n          title=\"Edit Friend\"\n          inputs={[\"name\", \"description\"]}\n          pres={[name, description]}\n          func={(id, data) => editFunc(id, data)}\n          after={null}\n          close={closeForm}\n          id={id}\n        />\n      ) : null}\n    </>\n  );\n}\n\nexport default Friend;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport Friend from \"../friend/Friend\";\nimport Form from \"../form/Form\";\nimport Paf from \"../api.js\";\nimport { Button } from \"reactstrap\";\nimport \"./FriendsC.css\";\n\n//All API calls for FRIENDS are initiated here. (CRUD)\n\nfunction FriendsC({ username }) {\n  const [form, setForm] = useState(false);\n  const [friends, setFriends] = useState([]);\n\n  //TOGGLE ADD FRIEND FORM\n  const openForm = () => {\n    setForm(true);\n  };\n  const closeForm = () => {\n    setForm(false);\n  };\n\n  //GET ALL. \n  useEffect(\n    function () {\n      async function getFriends() {\n        let friends = await Paf.getAllFriends(username);\n        setFriends(friends);\n      }\n      getFriends();\n    },\n    [username]\n  );\n\n  //CREATE\n  const addFriend = async (formData) => {\n    let res = await Paf.addFriend(formData);\n    setFriends((data) => {\n      if (data) {\n        return [...data, res];\n      } else {\n        return [res];\n      }\n    });\n    setForm(false);\n    return { success: true };\n  };\n\n  //UPDATE\n  async function editFriend(id, data) {\n    let newFriend = await Paf.editFriend(id, data);\n    let pos = friends\n      .map((f) => {\n        return f.id;\n      })\n      .indexOf(id);\n\n    setFriends((datas) => {\n      datas[pos] = newFriend;\n\n      return [...datas];\n    });\n    return { success: true };\n  };\n\n  //DELETE\n  async function deleteFriend(id) {\n    await Paf.deleteFriend(id);\n    let pos = friends\n      .map((f) => {\n        return f.id;\n      })\n      .indexOf(id);\n\n    setFriends((data) => {\n      data.splice(pos, 1);\n\n      return [...data];\n    });\n  }\n\n  //GENERATE FRIENDS\n  let allFriends = friends\n    ? friends.map((f, i) => {\n        return (\n          <Friend\n            name={f.name}\n            description={f.description}\n            id={f.id}\n            editFunc={editFriend}\n            deleteFunc={() => deleteFriend(f.id)}\n            key={i}\n          />\n        );\n      })\n    : null;\n\n  //Returns list of all friends a user has created.\n  return (\n    <>\n      <ul className=\"friends-list\">\n        {allFriends}\n        <div className=\"container-button\">\n          <Button onClick={openForm}>ADD FRIEND</Button>\n        </div>\n      </ul>\n      {form ? (\n        <Form\n          title=\"New Friend\"\n          inputs={[\"name\", \"description\"]}\n          func={addFriend}\n          after={`/friends`}\n          close={closeForm}\n        />\n      ) : null}\n    </>\n  );\n}\n\nexport default FriendsC;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport Form from \"../form/Form\";\nimport \"./Response.css\";\n\n\n//Renders an individual response.\n\nfunction Response({ s, deleteFunc, editFunc }) {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  //Toggles individual response dropdown form.\n  const [form, setForm] = useState(false);\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  //Opens edit form.\n  const openForm = () => {\n    setForm(true);\n  };\n  const closeForm = () => {\n    setForm(false);\n  };\n  return (\n    <>\n      <ul className=\"response\" key={s.id}>\n        {s.response}\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n          <DropdownToggle caret>Actions</DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem onClick={openForm}>Edit Response</DropdownItem>\n            <DropdownItem onClick={() => deleteFunc(s.id)}>\n              Delete Response\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </ul>\n      {form ? (\n        <Form\n          title=\"Edit Statement\"\n          inputs={[\"response\"]}\n          pres={s.response}\n          func={editFunc}\n          after={null}\n          close={closeForm}\n          id={s.id}\n        />\n      ) : null}\n    </>\n  );\n}\n\nexport default Response;\n","/** @format */\n\nimport \"./ResponseC.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Form from \"../form/Form\";\nimport Paf from \"../api.js\";\nimport { Button } from \"reactstrap\";\nimport Response from \"../response/Response\";\n\n//All api requests regarding responses are initiated here. (CRUD)\n\nfunction ResponseC() {\n  const { id } = useParams();\n  const [form, setForm] = useState(false);\n  const [responses, setResponses] = useState([]);\n  const [statement, setStatement] = useState();\n\n  const openForm = () => {\n    setForm(true);\n  };\n  const closeForm = () => {\n    setForm(false);\n  };\n\n  //Get all responses upon render\n  useEffect(\n    function () {\n      async function getStatementInfo() {\n        let statementy = await Paf.getStatementInfo(id);\n        setResponses(statementy.responses);\n        delete statementy.responses;\n        setStatement(statementy.statement);\n      }\n      getStatementInfo();\n    },\n    [id]\n  );\n\n  //ADD RESPONSE\n  const addResponse = async (formData) => {\n    formData.statement_id = parseInt(id);\n    let res = await Paf.addStatementResponse(formData);\n    setResponses((data) => {\n      if (data) {\n        return [...data, res];\n      } else {\n        return [res];\n      }\n    });\n    setForm(false);\n    return { success: true };\n  };\n\n  // Edit RESPONSE\n  async function editResponse(id, data) {\n    await Paf.editResponse(id, data);\n    let pos = responses\n      .map((s) => {\n        return s.id;\n      })\n      .indexOf(id);\n\n    setResponses((datas) => {\n      datas[pos].response = data.response;\n\n      return [...datas];\n    });\n    return { success: true };\n  }\n\n  // Delete a response\n  async function deleteResponse(id) {\n    await Paf.deleteResponse(id);\n    let pos = responses\n      .map((s) => {\n        return s.id;\n      })\n      .indexOf(id);\n\n    setResponses((data) => {\n      data.splice(pos, 1);\n\n      return [...data];\n    });\n  }\n\n  return (\n    <>\n      <ul className=\"friend-convo-list\">\n        <li className=\"friend-i-say title\">\n          When I say {statement ? statement : null}\n        </li>\n        <li className=\"friend-i-say title\">My friend can say...</li>\n        {responses\n          ? responses.map((s, i) => {\n              return (\n                <Response\n                  s={s}\n                  deleteFunc={deleteResponse}\n                  editFunc={editResponse}\n                  key={i}\n                />\n              );\n            })\n          : null}\n        <li className=\"container-button\">\n          <Button onClick={openForm}>Add Response</Button>\n        </li>\n      </ul>\n      {form ? (\n        <Form\n          title=\"New Response\"\n          inputs={[\"response\"]}\n          func={addResponse}\n          after={`/responses/${id}`}\n          close={closeForm}\n        />\n      ) : null}\n    </>\n  );\n}\n\nexport default ResponseC;\n","/** @format */\n\nimport \"./Chat.css\";\nimport Paf from \"../api.js\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport avatar from \"../assets/brain.jpg\";\n\n//All api request regarding chatting are intiated here. (Paf.sendStatement)\n\nfunction Chat() {\n  const [formData, setFormData] = useState({ statement: \"\" });\n  const { id } = useParams();\n  const [text, setText] = useState([{ statement: \"lets chat\" }]);\n\n  //handles form inputs, inputs state. Controlled component\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setFormData((fData) => ({\n      ...fData,\n      [name]: value,\n    }));\n  };\n\n  //sends text to server, server responses with resposne.\n  const addText = async (evt) => {\n    evt.preventDefault();\n    setText((data) => [...data, formData]);\n    formData.friend_id = id;\n    let res = await Paf.sendStatement(formData);\n    setText((data) => [...data, { statement: res }]);\n    setFormData({ statement: \"\" });\n    return { success: true };\n  };\n\n  //spot toggles left to right. Allows for each users comment to be placed in the right spot.\n  let spot;\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-room-container\">\n        <ul className=\"chat-spot\">\n          {text.map((t, i) => {\n            switch (spot) {\n              case undefined:\n                spot = \"left\";\n                break;\n              case \"left\":\n                spot = \"right\";\n                break;\n              case \"right\":\n                spot = \"left\";\n                break;\n              default:\n                spot = \"left\";\n            }\n\n            return (\n              <li className=\"chat-text\" style={{ textAlign: spot }} key={i}>\n                {spot === \"left\" ? (\n                  <img alt=\"avatar\" className=\"chat-avatar\" src={avatar} />\n                ) : null}\n                {t.statement}\n              </li>\n            );\n          })}\n        </ul>\n\n        <form className=\"chat-form\" autoComplete=\"off\">\n          <input\n            type=\"text\"\n            name=\"statement\"\n            className=\"chat-input\"\n            value={formData.statement}\n            onChange={handleChange}\n            autoComplete=\"off\"\n          ></input>\n          <button className=\"chat-button\" onClick={addText}>\n            Send\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./statement.css\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport Form from \"../form/Form\";\n\n//Generates display for each individual statement.\n\nfunction Statement({ say, id, deleteFunc, editFunc, fId }) {\n  const [form, setForm] = useState(false);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  //Toggles edit form\n  const openForm = () => {\n    setForm(true);\n  };\n  const closeForm = () => {\n    setForm(false);\n  };\n  return (\n    <>\n      <li className=\"friend-i-say\">\n        <h3>{say}</h3>\n        <Dropdown isOpen={dropdownOpen} toggle={toggle} className=\"drop\">\n          <DropdownToggle caret>Actions</DropdownToggle>\n          <DropdownMenu>\n            <Link to={`/responses/${id}`} style={{ textDecoration: \"none\" }}>\n              <DropdownItem\n                onClick={openForm}\n                style={{ textDecoration: \"none\" }}\n              >\n                Program Responses\n              </DropdownItem>\n            </Link>\n            <DropdownItem onClick={openForm}>Edit Statement</DropdownItem>\n            <DropdownItem id=\"delete\" onClick={deleteFunc}>\n              Delete Statement\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </li>\n      {form ? (\n        <div className=\"floating-form\">\n          <Form\n            title=\"Edit Statement\"\n            inputs={[\"statement\"]}\n            pres={[say]}\n            func={(id, data) => editFunc(id, data)}\n            after={null}\n            close={closeForm}\n            id={id}\n          />\n        </div>\n      ) : null}\n    </>\n  );\n}\n\nexport default Statement;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Paf from \"../api.js\";\nimport Statement from \"../statement/Statement\";\nimport Form from \"../form/Form\";\nimport { Button } from \"reactstrap\";\nimport \"./StatementC.css\";\n\n//All API calls regarding statements are initiated here. (CRUD)\nfunction StatementC() {\n  const { id } = useParams();\n  const [form, setForm] = useState(false);\n  const [statements, setStatements] = useState();\n\n  //TOGGLE ADD FORM\n  const openForm = () => {\n    setForm(true);\n  };\n  const closeForm = () => {\n    setForm(false);\n  };\n\n  //Get all statements for a friend.\n  useEffect(\n    function () {\n      async function getFriendInfo() {\n        let friend = await Paf.getFriendInfo(id);\n        setStatements(friend.statements);\n      }\n      getFriendInfo();\n    },\n    [id]\n  );\n\n  //ADD\n  const addStatement = async (formData) => {\n    formData.friend_id = parseInt(id);\n    let res = await Paf.addFriendStatement(formData);\n    setStatements((data) => [...data, res]);\n    setForm(false);\n    return { success: true };\n  };\n\n  // EDIT\n  async function editStatement(id, data) {\n    await Paf.editStatement(id, data);\n    let pos = statements\n      .map((s) => {\n        return s.id;\n      })\n      .indexOf(id);\n\n    setStatements((datas) => {\n      datas[pos].statement = data.statement;\n      return [...datas];\n    });\n    return { success: true };\n  }\n\n  // DELETE\n  async function deleteStatement(id) {\n    await Paf.deleteStatement(id);\n    let pos = statements\n      .map((s) => {\n        return s.id;\n      })\n      .indexOf(id);\n\n    setStatements((data) => {\n      data.splice(pos, 1);\n      return [...data];\n    });\n  }\n\n  return (\n    <>\n      <ul className=\"friend-convo-list\">\n        <li className=\"friend-i-say title\">When I say...</li>\n        {statements\n          ? statements.map((s, i) => {\n              return (\n                <Statement\n                  say={s.statement}\n                  id={s.id}\n                  editFunc={editStatement}\n                  deleteFunc={() => deleteStatement(s.id)}\n                  fId={id}\n                  key={i}\n                />\n              );\n            })\n          : null}\n        <li className=\"container-button\">\n          <Button onClick={openForm}>Add Statement</Button>\n        </li>\n      </ul>\n      {form ? (\n        <Form\n          title=\"New Statement\"\n          inputs={[\"statement\"]}\n          func={addStatement}\n          after={null}\n          close={closeForm}\n        />\n      ) : null}\n    </>\n  );\n}\n\nexport default StatementC;\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\nimport Home from \"../intro/Home\";\nimport Login from \"../auth/Login\";\nimport Signup from \"../auth/Signup\";\nimport UserContext from \"../UserContext\";\nimport FriendsC from \"../friendsC/FriendsC\";\nimport ResponseC from \"../responsesC/ResponseC\";\nimport Chat from \"../chat/Chat\";\nimport StatementC from \"../statementC/StatementC\";\n\n//Handles all front end routing. Some routes are protected by UserContext(logged in or not)\nfunction Routes({ loginFunc, signupFunc }) {\n  const { currentUser } = useContext(UserContext);\n\n  return (\n    <Switch>\n      <Route path=\"/paf-front-end\" exact>\n        {!currentUser ? <Home /> : <Redirect to=\"/paf-front-end/friends\" />}\n      </Route>\n      <Route path=\"/paf-front-end/friend/:id\" exact>\n        <StatementC />\n      </Route>\n      <Route path=\"/paf-front-end/responses/:id\" exact>\n        <ResponseC />\n      </Route>\n      <Route path=\"/paf-front-end/chat/:id\" exact>\n        <Chat />\n      </Route>\n      <Route path=\"/paf-front-end/friends\" exact>\n        {currentUser ? (\n          <FriendsC username={currentUser.username} />\n        ) : (\n          <Redirect to=\"/paf-front-end\" />\n        )}\n      </Route>\n      <Route path=\"/paf-front-end/login\" exact>\n        {currentUser ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Login loginFunc={(f) => loginFunc(f)} />\n        )}\n      </Route>\n      <Route path=\"/paf-front-end/sign-up\" exact>\n        {currentUser ? (\n          <Redirect to=\"/paf-front-end/friends\" />\n        ) : (\n          <Signup signupFunc={(f) => signupFunc(f)} />\n        )}\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","/** @format */\n\nimport React, { useState, useContext } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport UserContext from \".././UserContext\";\nimport \"./Navbar.css\";\n\n//No api work here.\n//Context is consumed here to determine login status.\n\nfunction NavBar({ logoutFunc, loginFunc }) {\n  const { currentUser } = useContext(UserContext);\n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n  const closeMobileGuest = () => {\n    setClick(false);\n    loginFunc({ username : \"guest\", password : \"guest55\"})\n  }\n\n  //Generate nav for logged in users.\n  function loggedInNav() {\n    return (\n      <>\n        <nav className=\"navbar\">\n          <div className=\"navbar-container\">\n            <NavLink to=\"/friends\" className=\"navbar-logo\" onClick={closeMobileMenu}>\n              {\"<PAF/>\"}\n            </NavLink>\n            <div className=\"menu-icon\" onClick={handleClick}>\n              <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\n            </div>\n            <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\n              <li className=\"nav-item\">\n                <NavLink\n                  to=\"/friends\"\n                  className=\"nav-links\"\n                  onClick={closeMobileMenu}\n                >\n                  Friends\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  to=\"/sign-up\"\n                  className=\"nav-links\"\n                  onClick={logoutFunc}\n                >\n                  Logout\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </>\n    );\n  }\n\n  //Generate nav for logged out users.\n  function loggedOutNav() {\n    return (\n      <>\n        <nav className=\"navbar\">\n          <div className=\"navbar-container\">\n            <Link to=\"/paf-front-end\" className=\"navbar-logo\" onClick={closeMobileMenu}>\n              {\"<PAF/>\"}\n            </Link>\n            <div className=\"menu-icon\" onClick={handleClick}>\n              <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\n            </div>\n            <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\n              <li className=\"nav-item\">\n                <Link\n                  className=\"nav-links\"\n                  onClick={closeMobileGuest}\n                >\n                  Try as guest\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  to=\"/login\"\n                  className=\"nav-links\"\n                  onClick={closeMobileMenu}\n                >\n                  Login\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  to=\"/sign-up\"\n                  className=\"nav-links\"\n                  onClick={closeMobileMenu}\n                >\n                  Sign Up\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </>\n    );\n  }\n  //Check if logged in or not from context.\n  return currentUser ? loggedInNav() : loggedOutNav();\n}\n\nexport default NavBar;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport UserContext from \"./UserContext\";\nimport jwt from \"jsonwebtoken\";\nimport Paf from \"./api.js\";\nimport Routes from \"./nav/Routes\";\nimport Navbar from \"./nav/Navbar\";\nimport \"./App.css\";\n\n//API calls for (signup, login, user fetch) are initiated from this container.\n//API calls are truly called from the Paf class located in /api.js\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  //If token is not in state, check local storage and update state. Update Paf class static token variable.\n  if (!token && localStorage.getItem(\"token\")) {\n    setToken(localStorage.getItem(\"token\"));\n    Paf.token = localStorage.getItem(\"token\");\n    let { username } = jwt.decode(Paf.token);\n    Paf.username = username;\n  }\n\n  //LOGIN. Call api -> setToken in state -> set token in localStorage -> Return {\"success\" : true or false}.\n  let handleLogin = async (formData) => {\n    try {\n      let res = await Paf.login(formData);\n      Paf.token = res.token;\n      setToken(res.token);\n      localStorage.setItem(\"token\", res.token);\n      window.location.reload();\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\");\n      return { success: false, errors };\n    }\n  };\n\n  //SIGN UP. Call api -> setToken in state -> set token in localStorage -> Return {\"success\" : true or false}.\n  let handleSignup = async (formData) => {\n    try {\n      let res = await Paf.signup(formData);\n      setToken(res.token);\n      localStorage.setItem(\"token\", res.token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"signup failed\");\n      return { success: false, errors };\n    }\n  };\n\n  //LOGOUT. Clear state and local storage.\n  let handleLogout = async () => {\n    setToken(null);\n    setCurrentUser(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  //If token state changes from intial null value, decode token for username, request user infomation from API and set currentUser state. username is decoded from jwt.\n  useEffect(\n    function () {\n      async function userInfo() {\n        let { username } = jwt.decode(token);\n        try {\n          let user = await Paf.getUserInfo(username);\n          setCurrentUser(user);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n      //Only call this if there is a token present.\n      if (token) {\n        userInfo();\n      }\n    },\n    [token]\n  );\n\n  return (\n    <UserContext.Provider value={{ currentUser, setCurrentUser }}>\n      <Navbar\n        logoutFunc={(f) => handleLogout(f)}\n        loginFunc={(f) => handleLogin(f)}\n      />\n      <div className=\"main\">\n        <Routes\n          loginFunc={(f) => handleLogin(f)}\n          signupFunc={(f) => handleSignup(f)}\n        />\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n//Simply renders App wrapped in BrowserRouter as Router.\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}