{"version":3,"sources":["UserContext.js","api.js","screens/home/Home.js","auth/Login.js","auth/Signup.js","screens/loading/Loading.js","components/friend/Friend.js","screens/friends-list-container/FriendsListContainer.js","components/response/Response.js","screens/responses-container/ResponsesContainer.js","screens/text-chat/Chat.js","components/statement/Statement.js","components/confirmation/Confirmation.js","components/confirm/ConfirmMessage.js","screens/friend-info-container/FriendInfoContainer.js","screens/face-chat/FaceChat.js","screens/settings/Settings.js","nav/Routes.js","nav/Navbar.js","App.js","index.js"],"names":["UserContext","React","createContext","BASE_URL","Paf","endpoint","data","method","url","headers","authorization","token","params","axios","message","response","error","Array","isArray","this","request","res","username","id","text","Home","className","style","padding","href","Login","loginFunc","useState","password","formData","setFormData","handleChange","e","target","name","value","old","onChange","placeholder","onClick","Signup","signupFunc","email","firstName","lastName","Loading","class","Friend","description","addFriendFunc","add","currentUser","useContext","INITIAL_STATE","evt","autoComplete","color","to","FriendsListContainer","friends","setFriends","fetch","setFetch","addStatus","setAddStatus","useEffect","a","getAllFriends","getFriends","addFriend","allFriends","map","f","i","blank","removedLast","pop","Response","s","editFunc","deleteFunc","index","addResponseStatus","addScreenFunc","addFunc","cancelAddResponse","edit","setEdit","toggleEdit","fData","disabled","ResponsesContainer","showResponses","responses","setResponses","setAddResponseStatus","addResponseScreen","newArr","getStatementInfo","statement","addResponse","statement_id","parseInt","addStatementResponse","editResponse","deleteResponse","length","Chat","useParams","setText","addText","preventDefault","friend_id","sendStatement","success","t","onSubmit","type","Statement","input","useRef","setShowResponses","console","log","current","focus","ref","autoFocus","Confirmation","ConfirmMessage","cancelDelete","confirmDelete","FriendInfoContainer","statements","setStatements","friend","setFriend","confirm","setConfirm","confirmMessageState","setConfirmMessageState","history","useHistory","getFriendInfo","addStatement","addFriendStatement","setTimeout","editStatement","deleteStatement","editFriend","deleteFriend","push","confirmation","borderBottom","cursor","display","fId","canceled","FaceChat","letter","setLetter","sentence","setSentence","recording","setRecording","talkable","setTalkable","synth","window","speechSynthesis","utterThis","SpeechSynthesisUtterance","voices","getVoices","voice","recognition","SpeechRecognition","webkitSpeechRecognition","onresult","event","transcript","results","info","alignItems","justifyContent","start","word","split","speak","myLoop","Settings","setReload","handleColorChange","API","updateUserInfo","getUserInfo","isAdmin","updateUser","Routes","path","exact","fallback","NavBar","logoutFunc","click","setClick","handleClick","closeMobileMenu","closeMobileGuest","App","setToken","setCurrentUser","reload","localStorage","getItem","jwt","decode","handleLogin","login","setItem","errors","handleSignup","signup","handleLogout","removeItem","user","userInfo","Provider","ReactDOM","render","document","getElementById"],"mappings":"+xBAMeA,EAFKC,IAAMC,gB,qDCApBC,EACJ,uCAoKaC,E,mIA5Jb,WAAqBC,GAArB,oGAA+BC,EAA/B,+BAAsC,GAAIC,EAA1C,+BAAmD,MAG3CC,EAHR,UAGiBL,EAHjB,YAG6BE,GACrBI,EAAU,CAAEC,cAAc,UAAD,OAAYN,EAAIO,QACzCC,EAAoB,QAAXL,EAAmBD,EAAO,GAL3C,kBAOkBO,IAAM,CAAEL,MAAKD,SAAQD,OAAMM,SAAQH,YAPrD,uCAOiEH,MAPjE,wCAUQQ,EAAU,KAAIC,SAAST,KAAKU,MAAMF,QAChCG,MAAMC,QAAQJ,GAAWA,EAAU,CAACA,GAX9C,0D,iHAkBA,WAAmBR,GAAnB,uFACkBa,KAAKC,QAAL,aAA2Bd,EAAM,QADnD,cACMe,EADN,yBAESA,GAFT,gD,kHAMA,WAAoBf,GAApB,uFACkBa,KAAKC,QAAL,gBAA8Bd,EAAM,QADtD,cACMe,EADN,yBAGSA,GAHT,gD,uHAOA,WAAyBC,GAAzB,uFACkBH,KAAKC,QAAL,gBAAsBE,IADxC,cACMD,EADN,yBAESA,GAFT,gD,0HAMA,WAA4Bf,GAA5B,uFACkBa,KAAKC,QAAL,gBAAsBD,KAAKG,UAAYhB,EAAM,SAD/D,cACMe,EADN,yBAESA,GAFT,gD,qHAQA,WAAuBf,GAAvB,uFACkBa,KAAKC,QAAL,kBAAwBhB,EAAIkB,UAAYhB,EAAM,QADhE,cACMe,EADN,yBAESA,GAFT,gD,yHAMA,WAA2BC,GAA3B,uFACkBH,KAAKC,QAAL,kBAAwBE,IAD1C,cACMD,EADN,yBAESA,GAFT,gD,yHAMA,WAA2BE,EAAID,GAA/B,uFACkBH,KAAKC,QAAL,kBAAwBhB,EAAIkB,SAA5B,YAAwCC,IAD1D,cACMF,EADN,yBAESA,GAFT,gD,wHAMA,WAAwBE,EAAIjB,GAA5B,uFACkBa,KAAKC,QAAL,kBACHhB,EAAIkB,SADD,YACaC,GAC3BjB,EACA,SAJJ,cACMe,EADN,yBAMSA,GANT,gD,0HAUA,WAA0BE,GAA1B,uFAEkBJ,KAAKC,QAAL,kBACHhB,EAAIkB,SADD,YACaC,GAH/B,UAKI,UALJ,cAEMF,EAFN,yBAOSA,GAPT,gD,8HAaA,WAAgCf,GAAhC,uFACkBa,KAAKC,QAAL,qBAA2BhB,EAAIkB,UAAYhB,EAAM,QADnE,cACMe,EADN,yBAESA,GAFT,gD,4HAMA,WAA8BE,GAA9B,uFACkBJ,KAAKC,QAAL,qBAA2BhB,EAAIkB,SAA/B,YAA2CC,IAD7D,cACMF,EADN,yBAESA,GAFT,gD,yHAMA,WAA2BE,EAAIjB,GAA/B,uFACkBa,KAAKC,QAAL,qBACAhB,EAAIkB,SADJ,YACgBC,GAC9BjB,EACA,SAJJ,cACMe,EADN,yBAMSA,GANT,gD,6HAUA,WAA6BE,GAA7B,uFAEkBJ,KAAKC,QAAL,qBACAhB,EAAIkB,SADJ,YACgBC,GAHlC,UAKI,UALJ,cAEMF,EAFN,yBAOSA,GAPT,gD,gIAaA,WAAkCf,GAAlC,uFACkBa,KAAKC,QAAL,oBAA0BhB,EAAIkB,UAAYhB,EAAM,QADlE,cACMe,EADN,yBAESA,GAFT,gD,wHAMA,WAA0BE,EAAIjB,GAA9B,uFACkBa,KAAKC,QAAL,oBACDhB,EAAIkB,SADH,YACeC,GAC7BjB,EACA,SAJJ,cACMe,EADN,yBAMSA,GANT,gD,4HAUA,WAA4BE,GAA5B,uFAEkBJ,KAAKC,QAAL,oBACDhB,EAAIkB,SADH,YACeC,GAHjC,UAKI,UALJ,cAEMF,EAFN,yBAOSA,GAPT,gD,yHAaA,WAA2BG,GAA3B,uFACkBL,KAAKC,QAAL,eAAqBhB,EAAIkB,UAAYE,EAAM,QAD7D,cACMH,EADN,yBAESA,GAFT,gD,4FC5HaI,MAlCf,WACE,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,QAAf,UAAuB,wCAAvB,IAAyC,sBAAMA,UAAU,GAAhB,kBAAzC,qBAAyF,sBAAMA,UAAU,QAAhB,wBAE3F,qBAAKA,UAAU,iBAAf,SACA,gCACE,sBAAKA,UAAU,gBAAf,UACC,mBAAGA,UAAU,uBACZ,wFAEF,sBAAKA,UAAU,gBAAf,UACE,mBAAGA,UAAU,uBACb,gFAEF,sBAAKA,UAAU,gBAAf,UACE,mBAAGA,UAAU,uBACb,8EAIJ,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,4DACA,sBAAKC,MAAO,CAACC,QAAS,cAAtB,UACE,sBAAMF,UAAU,UAAhB,+BADF,IACqD,mBAAGG,KAAK,2CAA2CH,UAAU,iBAA7D,kC,sBCShDI,MAlCf,YAA6B,IAAbC,EAAY,EAAZA,UAAY,EACIC,mBAAS,CAACV,SAAU,GAAIW,SAAU,KADtC,mBACrBC,EADqB,KACXC,EADW,KAG1B,SAASC,EAAaC,GAAI,IAAD,EACHA,EAAEC,OAAjBC,EADkB,EAClBA,KAAMC,EADY,EACZA,MACXL,GAAY,SAACM,GAAD,mBAAC,eACRA,GADO,kBAETF,EAAOC,OAIZ,OACE,qBAAKd,UAAU,kBAAf,SACE,uBAAMA,UAAU,aAAhB,UACE,uBACEA,UAAU,cACVc,MAAON,EAASZ,SAChBiB,KAAK,WACLG,SAAU,SAACL,GAAD,OAAOD,EAAaC,IAC9BM,YAAY,aAEd,uBACEjB,UAAU,cACVc,MAAON,EAASD,SAChBM,KAAK,WACLG,SAAU,SAACL,GAAD,OAAOD,EAAaC,IAC9BM,YAAY,aAEd,wBAAQC,QAAS,kBAAMb,EAAUG,IAAWR,UAAU,eAAtD,yB,OC6BOmB,MAxDf,YAA+B,IAAdC,EAAa,EAAbA,WAAa,EACEd,mBAAS,CAACV,SAAU,GAAIW,SAAU,GAAIc,MAAO,GAAIC,UAAU,GAAIC,SAAS,KAD1E,mBACvBf,EADuB,KACbC,EADa,KAG5B,SAASC,EAAaC,GAAI,IAAD,EACHA,EAAEC,OAAjBC,EADkB,EAClBA,KAAMC,EADY,EACZA,MACXL,GAAY,SAACM,GAAD,mBAAC,eACRA,GADO,kBAETF,EAAOC,OAGZ,OACE,qBAAKd,UAAU,mBAAf,SACE,uBAAMA,UAAU,aAAhB,UACE,uBACEA,UAAU,cACVc,MAAON,EAASZ,SAChBiB,KAAK,WACLG,SAAU,SAACL,GAAD,OAAOD,EAAaC,IAC9BM,YAAY,aAEd,uBACEjB,UAAU,cACVc,MAAON,EAASD,SAChBM,KAAK,WACLG,SAAU,SAACL,GAAD,OAAOD,EAAaC,IAC9BM,YAAY,aAGd,uBACEjB,UAAU,cACVc,MAAON,EAASc,UAChBT,KAAK,YACLG,SAAU,SAACL,GAAD,OAAOD,EAAaC,IAC9BM,YAAY,eAGd,uBACEjB,UAAU,cACVc,MAAON,EAASe,SAChBV,KAAK,WACLG,SAAU,SAACL,GAAD,OAAOD,EAAaC,IAC9BM,YAAY,cAEd,uBACEjB,UAAU,cACVc,MAAON,EAASa,MAChBR,KAAK,QACLG,SAAU,SAACL,GAAD,OAAOD,EAAaC,IAC9BM,YAAY,UAEd,wBAAQC,QAAS,kBAAME,EAAWZ,IAAWR,UAAU,eAAvD,2B,OC9COwB,MARf,WACE,OACE,qBAAKxB,UAAU,oBAAf,SACE,qBAAKyB,MAAM,qB,uBCmDFC,MAnDf,YAAsE,IAArDb,EAAoD,EAApDA,KAAMc,EAA8C,EAA9CA,YAAa9B,EAAiC,EAAjCA,GAAI+B,EAA6B,EAA7BA,cAA6B,IAAdC,WAAc,SAC5DC,EAAeC,qBAAWzD,GAA1BwD,YACDE,EAAgB,CAACnB,OAAMc,eAFsC,EAGnCrB,mBAAS0B,GAH0B,mBAG5DxB,EAH4D,KAGlDC,EAHkD,KAK7DC,EAAe,SAACuB,GAAS,IAAD,EACRA,EAAIrB,OAAnBC,EADuB,EACvBA,KAAMC,EADiB,EACjBA,MACXL,GAAY,SAACM,GAAD,mBAAC,eACRA,GADO,kBAETF,EAAOC,QAIZ,OAAIe,EAEA,sBAAK7B,UAAU,oBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACEA,UAAU,+BACVa,KAAK,OACLI,YAAY,OACZH,MAAON,EAASK,KAChBG,SAAU,SAACiB,GAAD,OAASvB,EAAauB,IAC/BC,aAAa,QAEhB,uBACElC,UAAS,0DAAqD8B,EAAYK,OAC1ElB,YAAY,cACZJ,KAAK,cACLC,MAAON,EAASmB,YAChBX,SAAU,SAACiB,GAAD,OAASvB,EAAauB,IAC/BC,aAAa,WAGlB,sBAAMlC,UAAU,gBAAgBkB,QAAS,kBAAMU,EAAcpB,IAA7D,qBAOF,eAAC,IAAD,CAAMR,UAAU,SAASoC,GAAE,kBAAavC,GAAxC,UACE,oBAAIG,UAAU,cAAd,SAA6Ba,IAC7B,mBAAGb,UAAS,yCAAoC8B,EAAYK,OAA5D,SACGR,Q,OCmCIU,MA5Ef,YAAoD,IAApBzC,EAAmB,EAAnBA,SAAUuC,EAAS,EAATA,MAAS,EACnB7B,mBAAS,IADU,mBAC1CgC,EAD0C,KACjCC,EADiC,OAEvBjC,oBAAS,GAFc,mBAE1CkC,EAF0C,KAEnCC,EAFmC,OAGfnC,oBAAS,GAHM,mBAG1CoC,EAH0C,KAG/BC,EAH+B,KAMjDC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACsBnE,EAAIoE,cAAclD,GADxC,OACM0C,EADN,OAEEC,EAAWD,GAFb,4CADY,uBAAC,WAAD,wBAKZS,KAEF,CAACP,EAAO5C,IAIV,IAAMoD,EAAS,uCAAG,WAAOxC,GAAP,SAAAqC,EAAA,sEACVnE,EAAIsE,UAAUxC,GADJ,OAEhBiC,GAAS,SAAC1B,GAAD,OAAUA,KACnB4B,GAAa,GAHG,2CAAH,sDAsBXM,EAAaX,EACbA,EAAQY,KAAI,SAACC,EAAGC,GAChB,OAAGD,EAAEE,MAED,cAAC,EAAD,CACExC,KAAK,GACLc,YAAY,GAEZE,KAAK,EACLD,cAAeoB,GAFX,OAON,cAAC,EAAD,CACEnC,KAAMsC,EAAEtC,KACRc,YAAawB,EAAExB,YACf9B,GAAIsD,EAAEtD,IACDuD,MAKX,KAIJ,OACI,sBAAKpD,UAAU,eAAf,UACGiD,EACD,qBAAKjD,UAAU,8BAAf,SACE,wBAAQA,UAAS,mCAA+B0C,EAAoB,aAARP,GAAwBjB,QAAUwB,EAzCtG,WACEC,GAAa,GACbJ,GAAW,SAACxB,GACV,IAAIuC,EAAW,YAAOvC,GAEtB,OADAuC,EAAYC,MACLD,MAVX,WACEX,GAAa,GACbJ,GAAW,SAACxB,GAAD,4BAAaA,GAAb,CAAkB,CAACsC,OAAO,SA4C/B,SAA8IX,EAAY,IAAM,Y,cCkB3Jc,MA5Ff,YAA4H,IAAzGC,EAAwG,EAAxGA,EAAeC,GAAyF,EAArGC,WAAqG,EAAzFD,UAAUE,EAA+E,EAA/EA,MAAOxE,EAAwE,EAAxEA,QAASyE,EAA+D,EAA/DA,kBAAmBC,EAA4C,EAA5CA,cAAeC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,kBAAoB,EACjG1D,oBAAS,GADwF,mBAClH2D,EADkH,KAC5GC,EAD4G,OAEzF5D,mBAAS,CAACjB,SAAQ,OAAEoE,QAAF,IAAEA,OAAF,EAAEA,EAAGpE,WAFkE,mBAElHmB,EAFkH,KAExGC,EAFwG,KAGlHqB,EAAeC,qBAAWzD,GAA1BwD,YACP,SAASqC,IACPD,GAAQ,SAACnD,GAAD,OAAUA,KAIpB,IAAML,EAAe,SAACuB,GAAS,IAAD,EACNA,EAAIrB,OAAnBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MACbL,GAAY,SAAC2D,GAAD,mBAAC,eACRA,GADO,kBAETvD,EAAOC,QAKZ,OAAG2C,EAEC,sBAAKzD,UAAU,WAAf,UACA,sBAAMA,UAAS,iBAAf,SAAoC4D,EAAQ,IAC1C,uBACE9C,MAAON,EAASnB,SAChBgF,SAAUJ,EACVpD,KAAK,WACLG,SAAUN,EACVV,UAAS,oBAAeiE,EAAO,GAAK,cAEtC,sBAAKjE,UAAU,mBAAf,UACE,qBACEkB,QAAS+C,EAAOE,EAAa,WAAOA,IAAcT,EAASD,EAAE5D,GAAIW,IACjER,UAAU,gBAFZ,SAIGiE,EAAO,mBAAGjE,UAAU,8BAAoC,SAE3D,qBACEkB,QAAS+C,EAAOE,EAAa,WAAOT,EAASlD,IAC7CR,UAAU,kBAFZ,SAIGiE,EAAO,mBAAGjE,UAAU,qCAA0C,cApBtCyD,EAAE5D,IAyB1BkE,EAEP,sBAAK/D,UAAU,WAAf,UACA,sBAAMA,UAAU,iBAAhB,SAAkC4D,EAAQ,IACxC,uBACE9C,MAAON,EAASnB,SAChBwB,KAAK,WACLG,SAAUN,EACVV,UAAU,qBACVkC,aAAa,QAEf,sBAAKlC,UAAU,mBAAf,UACE,qBACEkB,QAAS8C,EACThE,UAAU,kBAFZ,SAIG,WAEH,qBACEkB,QAAS,WAAO6C,EAAQvD,IACxBR,UAAU,GAFZ,SAIG,eASP,sBAAKA,UAAU,WAAf,UACE,sBAAMA,UAAU,iBAAhB,SAAkCZ,IAClC,qBAAKY,UAAU,mBAAf,SACE,wBACEA,UAAS,8BAAkB8B,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAaK,OACxCjB,QAAS4C,EACTO,SAAUR,EAHZ,qBCkCKS,MAhHf,YAAkD,IAArBzE,EAAoB,EAApBA,GAAI0E,EAAgB,EAAhBA,cAAgB,EACbjE,mBAAS,IADI,mBACxCkE,EADwC,KAC7BC,EAD6B,OAEGnE,oBAAS,GAFZ,mBAExCuD,EAFwC,KAErBa,EAFqB,OAGrBpE,oBAAS,GAHY,mBAGxCkC,EAHwC,KAGjCC,EAHiC,KAM/C,SAASkC,IACPD,GAAqB,GACrBD,GAAa,SAAC1D,GAAD,4BAAaA,GAAb,CAAkB,CAACsC,OAAO,QAGzC,SAASW,IACPU,GAAqB,GACrBD,GAAa,SAAC1D,GACZ,IAAI6D,EAAM,YAAO7D,GAEjB,OADA6D,EAAOrB,MACAqB,KAKXhC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBnE,EAAImG,iBAAiBhF,GAD7C,OACMiF,EADN,OAEEL,EAAaK,EAAUN,kBAChBM,EAAUN,UAHnB,4CADc,uBAAC,WAAD,wBAMdK,KACC,CAACrC,EAAO3C,IAGX,IAAMkF,EAAW,uCAAG,WAAOvE,GAAP,SAAAqC,EAAA,6DAClBrC,EAASwE,aAAeC,SAASpF,GADf,SAEZnB,EAAIwG,qBAAqB1E,GAFb,OAGlBkE,GAAqB,GACrBjC,GAAS,SAAC1B,GAAD,OAAUA,KAJD,2CAAH,sDA/B8B,SAuChCoE,EAvCgC,gFAuC/C,WAA4BtF,EAAIjB,GAAhC,SAAAiE,EAAA,sEACQnE,EAAIyG,aAAatF,EAAIjB,GAD7B,OAEE6D,GAAS,SAAC1B,GAAD,OAAUA,KAFrB,4CAvC+C,+BA6ChCqE,EA7CgC,8EA6C/C,WAA8BvF,GAA9B,SAAAgD,EAAA,sEACQnE,EAAI0G,eAAevF,GAD3B,OAEE4C,GAAS,SAAC1B,GAAD,OAAUA,KAFrB,4CA7C+C,sBAkD/C,OAAIyD,EAAUa,OAEV,qBACErF,UAAS,8BACPuE,EAAgB,gBAAkB,IAFtC,SAKGC,EAAUtB,KAAI,SAACO,EAAGL,GACjB,OAAIK,EAAEJ,MAEF,mCACE,cAAC,EAAD,CAAUU,QAASgB,EAAqBnB,MAAOR,EAAGY,kBAAmBA,GAAhCZ,KAGhCoB,EAAUa,SAAWjC,EAAI,EAEhC,qCACE,cAAC,EAAD,CACEK,EAAGA,EACHE,WAAYyB,EACZ1B,SAAUyB,EAEVvB,MAAOR,GADFK,EAAE5D,IAGT,cAAC,EAAD,CACET,QAAQ,GACR0E,cAAea,EACfd,kBAAmBA,OAMvB,cAAC,EAAD,CACEJ,EAAGA,EACHE,WAAYyB,EACZ1B,SAAUyB,EAEVvB,MAAOR,GADFK,EAAE5D,SAUjB,qBACEG,UAAS,8BACPuE,EAAgB,gBAAkB,IAFtC,SAKE,cAAC,EAAD,CACEnF,QAAQ,+BACR0E,cAAea,EACfd,kBAAmBA,O,OC9CdyB,MAxDf,WAAiB,IAAD,EACkBhF,mBAAS,CAAEwE,UAAW,KADxC,mBACPtE,EADO,KACGC,EADH,KAENZ,EAAO0F,cAAP1F,GAFM,EAGUS,mBAAS,CAAC,CAAEwE,UAAW,eAHjC,mBAGPhF,EAHO,KAGD0F,EAHC,KAeRC,EAAO,uCAAG,WAAOxD,GAAP,eAAAY,EAAA,6DACdZ,EAAIyD,iBACJF,GAAQ,SAAC5G,GAAD,4BAAcA,GAAd,CAAoB4B,OAC5BA,EAASmF,UAAY9F,EAHP,SAIEnB,EAAIkH,cAAcpF,GAJpB,cAIVb,EAJU,OAKd6F,GAAQ,SAAC5G,GAAD,4BAAcA,GAAd,CAAoB,CAAEkG,UAAWnF,QACzCc,EAAY,CAAEqE,UAAW,KANX,kBAOP,CAAEe,SAAS,IAPJ,2CAAH,sDAUb,OACE,qBAAK7F,UAAU,iBAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,oBAAIA,UAAU,YAAd,SACGF,EAAKoD,KAAI,SAAC4C,EAAG1C,GACZ,OACE,oBAAIpD,UAAU,YAAd,SACG8F,EAAEhB,WAD0B1B,QAOrC,uBAAMpD,UAAU,YAAYkC,aAAa,MAAM6D,SAAUN,EAAzD,UACE,uBACEO,KAAK,OACLnF,KAAK,YACLb,UAAU,aACVc,MAAON,EAASsE,UAChB9D,SAtCW,SAACiB,GAAS,IAAD,EACJA,EAAIrB,OAApBC,EADoB,EACpBA,KAAMC,EADc,EACdA,MACdL,GAAY,SAAC2D,GAAD,mBAAC,eACRA,GADO,kBAETvD,EAAOC,QAmCFoB,aAAa,QAEf,wBAAQlC,UAAU,cAAcgG,KAAK,SAArC,2B,OCuBKC,MAzEf,YAAgF,IAA5DnB,EAA2D,EAA3DA,UAAWjF,EAAgD,EAAhDA,GAAI6D,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,WAAYI,EAAsB,EAAtBA,QAASlC,EAAa,EAAbA,IAAa,KAAR+B,MAC7CtD,oBAAS,IAD4C,mBACtE2D,EADsE,KAChEC,EADgE,KAEvEgC,EAAQC,iBAAO,MAFwD,EAG7C7F,mBAAS,CAACwE,cAHmC,mBAGtEtE,EAHsE,KAG5DC,EAH4D,OAInCH,oBAAS,GAJ0B,mBAItEiE,EAJsE,KAIvD6B,EAJuD,KAKtEtE,EAAeC,qBAAWzD,GAA1BwD,YACP,SAASqC,IACPD,GAAQ,SAACnD,GAAD,OAAUA,KAQhBkD,IAJFoC,QAAQC,IAAIJ,EAAMK,SAClBL,EAAMK,QAAQC,QAKdH,QAAQC,IAAI,YAId,IAAM5F,EAAe,SAACuB,GAAS,IAAD,EACNA,EAAIrB,OAAnBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MACbL,GAAY,SAAC2D,GAAD,mBAAC,eACRA,GADO,kBAETvD,EAAOC,QAIZ,OAAGe,EAEC,qBAAK7B,UAAU,iCAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,uBAAOc,MAAON,EAASsE,UAAWjE,KAAK,YAAYG,SAAUN,EAAcV,UAAU,oCAAoCkC,aAAa,QACtI,qBAAKlC,UAAU,oBAAf,SACE,qBACEA,UAAU,mBACVkB,QAAS,kBAAM6C,EAAQvD,IAFzB,SAIG,gBAQT,sBAAKR,UAAU,iCAAf,UACE,sBAAKA,UAAU,sBAAf,UACA,mBAAGA,UAAS,aAAQuE,EAAgB,gBAAkB,kBAA1C,yBAAqEzC,QAArE,IAAqEA,OAArE,EAAqEA,EAAaK,OAASjB,QAAS,kBAAMkF,GAAiB,SAACrF,GAAD,OAAUA,QAC/I,uBAAOiF,KAAK,OAAOS,IAAKP,EAAOpF,MAAON,EAASsE,UAAWT,SAAUJ,EAAMpD,KAAK,YAAYG,SAAUN,EAAcV,UAAS,oBAAeiE,EAAO,GAAK,YAAc/B,aAAa,MAAMwE,WAAS,IACjM,sBAAK1G,UAAU,oBAAf,UACE,qBACEA,UAAU,iBACVkB,QAAU+C,EAAO,SAAChC,GAASkC,KAAiB,WAAQA,IAAcT,EAAS7D,EAAIW,IAFjF,SAIGyD,EAAO,mBAAGjE,UAAU,8BAAmC,SAE1D,qBACEA,UAAU,mBACVkB,QAAS,kBAAMyC,EAAW9D,IAF5B,SAIGoE,EAAO,mBAAGjE,UAAU,qCAA0C,WAIrE,cAAC,EAAD,CAAoBH,GAAIA,EAAI0E,cAAeA,Q,cC7DpCoC,MARf,WACE,OACE,qBAAK3G,UAAU,yBAAf,SACE,2D,OCWS4G,MAdf,YAAwD,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,cACrC,OACE,qBAAK9G,UAAU,oBAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,gFACA,sBAAKA,UAAU,uBAAf,UACE,wBAAQkB,QAAS2F,EAAjB,gBACA,wBAAQ3F,QAAS4F,EAAjB,0BCkMKC,MAjMf,YAAuC,IAAT5E,EAAQ,EAARA,MACrBtC,EAAM0F,cAAN1F,GAD6B,EAEAS,mBAAS,IAFT,mBAE7B0G,EAF6B,KAEjBC,EAFiB,OAGR3G,qBAHQ,mBAG7B4G,EAH6B,KAGrBC,EAHqB,OAIZ7G,oBAAS,GAJG,mBAI7B2D,EAJ6B,KAIvBC,EAJuB,OAKJ5D,mBAAS,CAACO,KAAM,GAAIc,YAAa,KAL7B,mBAK7BnB,EAL6B,KAKnBC,EALmB,OAMFH,oBAAS,GANP,mBAM7BoC,EAN6B,KAMlBC,EANkB,OAOVrC,oBAAS,GAPC,mBAO7BkC,EAP6B,KAOtBC,EAPsB,OAQNnC,oBAAS,GARH,mBAQ7B8G,EAR6B,KAQpBC,EARoB,OASkB/G,oBAAS,GAT3B,mBAS7BgH,EAT6B,KASRC,EATQ,KAU9BC,EAAUC,cAQV/G,EAAe,SAACuB,GAAS,IAAD,EACNA,EAAIrB,OAAnBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MACbL,GAAY,SAAC2D,GAAD,mBAAC,eACRA,GADO,kBAETvD,EAAOC,QAKZ8B,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACqBnE,EAAIgJ,cAAc7H,GADvC,OACMqH,EADN,OAEEzG,GAAY,iBAAO,CAACI,KAAMqG,EAAOrG,KAAMc,YAAauF,EAAOvF,gBAC3DwF,EAAUD,GACVD,EAAcC,EAAOF,YAJvB,4CADc,uBAAC,WAAD,wBAOdU,KACC,CAAClF,EAAO3C,IAGX,IAAM8H,EAAY,uCAAG,WAAOnH,GAAP,SAAAqC,EAAA,6DACnBrC,EAASmF,UAAYV,SAASpF,GADX,kBAGXnB,EAAIkJ,mBAAmBpH,GAHZ,OAIjBmC,GAAa,GACbF,GAAS,SAAC1B,GAAD,OAAUA,KACnBsG,GAAW,GACXQ,YAAW,WACTR,GAAW,KACV,KATc,kDAWjBA,GAAW,GAXM,0DAAH,sDAtCkB,SAsDrBS,EAtDqB,gFAsDpC,WAA6BjI,EAAIjB,GAAjC,SAAAiE,EAAA,sEACQnE,EAAIoJ,cAAcjI,EAAIjB,GAD9B,OAEE6D,GAAS,SAAC1B,GAAD,OAAUA,KAFrB,4CAtDoC,+BA4DrBgH,GA5DqB,iFA4DpC,WAA+BlI,GAA/B,SAAAgD,EAAA,sEACQnE,EAAIqJ,gBAAgBlI,GAD5B,OAEE8C,GAAa,GACbF,GAAS,SAAC1B,GAAD,OAAUA,KAHrB,4CA5DoC,oEAmEpC,sBAAA8B,EAAA,sEACQnE,EAAIsJ,WAAWd,EAAOrH,GAAIW,GADlC,OAEEiC,GAAS,SAAC1B,GAAD,OAAUA,KACnBmD,GAAQ,GAHV,4CAnEoC,oEA8EpC,sBAAArB,EAAA,sEACQnE,EAAIuJ,aAAapI,GADzB,OAEE2H,EAAQU,KAAK,KAFf,4CA9EoC,sBAkGpC,IAAIC,GAAef,EAAU,cAAC,EAAD,IAAkB,KAE/C,OACE,sBAAKpH,UAAU,oCAAf,UAEE,sBAAKA,UAAU,+BAAf,UAEE,sBAAKA,UAAU,+BAAf,UACE,uBACEc,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAUK,KACjBwD,SAAUJ,EACVpD,KAAK,OACLG,SAAUN,EACVV,UAAU,0CACVC,MAAO,CAACmI,aAAenE,EAA0B,OAA3B,oBAExB,uBACEnD,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAUmB,YACjB0C,SAAUJ,EACVpD,KAAK,cACLG,SAAUN,EACVV,UAAS,yDAAoDmC,GAC7DlC,MAAO,CAACmI,aAAenE,EAA0B,OAA3B,uBAI1B,sBAAKjE,UAAU,kCAAf,UACE,eAAC,IAAD,CACEoC,GAAE,uBAAW8E,QAAX,IAAWA,OAAX,EAAWA,EAAQrH,IACrBG,UAAU,cAFZ,UAIE,mBAAGA,UAAU,yCACb,sBAAMA,UAAU,mBAAhB,0BAEF,eAAC,IAAD,CACEoC,GAAE,2BAAe8E,QAAf,IAAeA,OAAf,EAAeA,EAAQrH,IACzBG,UAAU,cAFZ,UAIE,mBAAGA,UAAU,2BACb,sBAAMA,UAAU,mBAAhB,0BAEF,sBAAKkB,QAAS+C,EA9HtB,WACEC,GAAQ,SAACnD,GAAD,OAAUA,MAdgB,4CA2IkBf,UAAU,cAAxD,UACGiE,EAAO,mBAAGjE,UAAU,gCAAqC,sBAAMC,MAAO,CAACkC,MAAO,QAASkG,OAAQ,WAAtC,kBAC1D,sBAAMrI,UAAU,mBAAmBC,MAAO,CAACqI,QAASrE,EAAgB,GAAT,QAA3D,0BAEF,sBAAKjE,UAAU,cAAf,UACE,mBAAGA,UAAU,uBAAuBkB,QAvE9C,WACEqG,GAAuB,MAuEf,sBAAMvH,UAAU,mBAAhB,oCAMN,qBAAKA,UAAU,uBAAuBH,GAAG,OAAzC,SACGmH,EAAW9D,KAAI,SAACO,EAAGL,GAClB,OAAIK,EAAEJ,MAEF,cAAC,EAAD,CACEU,QAAS4D,EAET9F,KAAK,EACLiD,UAAU,GACVlB,MAAOR,GAHFA,GAQP,cAAC,EAAD,CACE0B,UAAWrB,EAAEqB,UACbjF,GAAI4D,EAAE5D,GACN6D,SAAUoE,EACVnE,WAAYoE,GACZQ,IAAK1I,EAELgC,KAAK,EACL+B,MAAOR,GAFFK,EAAE5D,SAQjB,qBAAKG,UAAU,2BAAf,SACE,wBACEA,UAAS,wBAAmBmC,GAC5BjB,QAAUwB,EA7FlB,WACEC,GAAa,GACbsE,GAAc,SAAClG,GACb,IAAIyH,EAAQ,YAAOzH,GAEnB,OADAyH,EAASjF,MACFiF,MAVX,WACE7F,GAAa,GACbsE,GAAc,SAAClG,GAAD,4BAAaA,GAAb,CAAkB,CAACsC,OAAO,SA8FpC,SAIIX,EAAkB,IAAN,QAGjByF,GACAb,GAAuB,cAAC,EAAD,CAAgBT,aAAc,kBAAMU,GAAuB,IAAQT,cA5L3D,kD,OCgFvB2B,MApFf,WAAqB,IAAD,EACUnI,mBAAS,QADnB,mBACXoI,EADW,KACHC,EADG,OAEcrI,mBAAS,yBAFvB,mBAEXsI,EAFW,KAEDC,EAFC,OAGgBvI,mBAAS,SAHzB,mBAGXwI,EAHW,KAGAC,EAHA,OAIczI,mBAAS,QAJvB,mBAIX0I,EAJW,KAIDC,EAJC,KAKXpJ,EAAM0F,cAAN1F,GAEHqJ,EAAQC,OAAOC,gBACfC,EAAY,IAAIC,yBAAyBV,GACzCW,EAASL,EAAMM,YACnBH,EAAUI,MAAQF,EAAO,IACzB,IACMG,EAAc,IADMP,OAAOQ,mBAAqBR,OAAOS,yBA6C7D,OAlBAF,EAAYG,SAAW,SAAUC,GAC/Bf,EAAa,SACbE,EAAY,QACZ,IAAIc,EAAaD,EAAME,QAAQ,GAAG,GAAGD,WAErClB,EAAYkB,GAEC,uCAAG,8BAAAlH,EAAA,6DACVoH,EAAO,CACTnF,UAAWiF,EACXpE,UAAW9F,GAHC,SAKEnB,EAAIkH,cAAcqE,GALpB,OAKVtK,EALU,OAMdkJ,EAAYlJ,GANE,2CAAH,oDAQb8F,IAIA,sBAAKzF,UAAU,iBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,YACf,qBAAKA,UAAU,eAEjB,qBAAKA,UAAS,gBAAW0I,QAE3B,sBACEzI,MAAO,CACLqI,QAAS,OACT4B,WAAY,SACZC,eAAgB,UAJpB,UAOE,qBACEjJ,QAzCR,WACE6H,EAAa,aACbE,EAAY,MACZS,EAAYU,SAuCNpK,UAAS,yBAAoB8I,KAE/B,qBAAK5H,QA9DX,WACE,IAAIkC,EAAI,EACJiH,EAAOzB,EAAS0B,MAAM,IAW1BpB,EAAMqB,MAAMlB,GATZ,SAASmB,IACP3C,YAAW,WACTc,EAAU0B,EAAKjH,MACfA,EACQ,IACNoH,MAED,KAGLA,IAgDyBxK,UAAS,UAAKgJ,GAAnC,SACG,a,OCEIyB,MAjFf,YAA+B,IAAZ7K,EAAW,EAAXA,SAAW,EACKmC,qBAAWzD,GAArCoM,EADqB,EACrBA,UAAW5I,EADU,EACVA,YADU,EAEIxB,qBAFJ,mBAErBE,EAFqB,KAEXC,EAFW,KAKtBC,EAAe,SAACuB,GAAS,IAAD,EACNA,EAAIrB,OAAnBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MACbL,GAAY,SAAC2D,GAAD,mBAAC,eACRA,GADO,kBAETvD,EAAOC,QAaZ,SAAS6J,EAAkBxI,GACzB1B,GAAY,SAAC2D,GAAD,mBAAC,eACRA,GADO,IAEVjC,MAAOA,OAzBiB,4CA6B5B,sBAAAU,EAAA,sEACQ+H,EAAIC,eAAerK,GAD3B,OAEEkK,GAAU,SAAC3J,GAAD,OAAUA,KAFtB,4CA7B4B,sBAkC5B,OArBA6B,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACmB+H,EAAIE,YAAYlL,GADnC,cACMqK,EADN,QAEcc,QACZtK,EAAYwJ,GAHd,4CADc,uBAAC,WAAD,wBAMda,KACC,CAAClL,IAeF,sBAAKI,UAAU,qBAAf,UACE,sBAAKA,UAAU,sBAAf,sBAEE,uBACEc,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAUZ,SACjBiB,KAAK,WACLG,SAAUN,EACVV,UAAU,cANd,YASE,uBACEc,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAUe,SACjBV,KAAK,WACLG,SAAUN,EACVV,UAAU,cAbd,aAgBE,uBACEc,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAUc,UACjBT,KAAK,YACLG,SAAUN,EACVV,UAAU,cApBd,SAuBE,uBACEc,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAUa,MACjBR,KAAK,QACLG,SAAUN,EACVV,UAAU,iBAGd,sBAAKA,UAAU,SAAf,UACE,qBAAKC,MAAO,CAACkC,MAAO,SAApB,qCACA,sBAAKnC,UAAU,SAAf,UACE,qBAAKA,UAAS,uBAAsC,YAAZ,OAARQ,QAAQ,IAARA,OAAA,EAAAA,EAAU2B,OAAqB,SAAW,IAAMjB,QAAS,kBAAMyJ,EAAkB,aACjH,qBAAK3K,UAAS,qBAAoC,UAAZ,OAARQ,QAAQ,IAARA,OAAA,EAAAA,EAAU2B,OAAmB,SAAW,IAAMjB,QAAS,kBAAMyJ,EAAkB,WAC7G,qBAAK3K,UAAS,sBAAqC,WAAZ,OAARQ,QAAQ,IAARA,OAAA,EAAAA,EAAU2B,OAAoB,SAAW,IAAMjB,QAAS,kBAAMyJ,EAAkB,kBAGnH,wBAAQ3K,UAAS,2BAAsB8B,EAAYK,OAASjB,QAAS,kBA1E7C,0CA0EmD8J,IAA3E,gCCJSC,MA3Df,YAA0C,IAAzB5K,EAAwB,EAAxBA,UAAWe,EAAa,EAAbA,WACnBU,EAAeC,qBAAWzD,GAA1BwD,YAEP,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoJ,KAAK,IAAIC,OAAK,EAArB,SACIrJ,EAAoE,cAAC,IAAD,CAAUM,GAAG,aAAnE,cAAC,WAAD,CAAUgJ,SAAU,cAAC,EAAD,IAApB,SAAgC,cAAC,EAAD,QAElD,cAAC,IAAD,CAAOF,KAAK,cAAcC,OAAK,EAA/B,SACE,cAAC,EAAD,CAAYhJ,MAAK,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAaK,UAElC,cAAC,IAAD,CAAO+I,KAAK,iBAAiBC,OAAK,EAAlC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAK,EAA7B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,OAAK,EAAjC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAK,EAA7B,SACWrJ,EACP,cAAC,EAAD,CAAUlC,SAAUkC,EAAYlC,WAEhC,cAAC,IAAD,CAAUwC,GAAG,QAGjB,cAAC,IAAD,CAAO8I,KAAK,WAAWC,OAAK,EAA5B,SACGrJ,EACC,cAAC,EAAD,CAAUlC,SAAUkC,EAAYlC,SAAWuC,MAAOL,EAAYK,QAE9D,cAAC,IAAD,CAAUC,GAAG,QAGjB,cAAC,IAAD,CAAO8I,KAAK,SAASC,OAAK,EAA1B,SACGrJ,EACC,cAAC,IAAD,CAAUM,GAAG,MAEb,cAAC,EAAD,CAAO/B,UAAW,SAAC8C,GAAD,OAAO9C,EAAU8C,QAGvC,cAAC,IAAD,CAAO+H,KAAK,WAAWC,OAAK,EAA5B,SACGrJ,EACC,cAAC,IAAD,CAAUM,GAAG,aAEb,cAAC,EAAD,CAAQhB,WAAY,SAAC+B,GAAD,OAAO/B,EAAW+B,QAG1C,cAAC,IAAD,CAAO+H,KAAK,IAAZ,SACGpJ,EACC,cAAC,IAAD,CAAUM,GAAG,MAEb,cAAC,EAAD,CAAQhB,WAAY,SAAC+B,GAAD,OAAO/B,EAAW+B,Y,OCwCjCkI,MArGf,YAA0C,IAAzBC,EAAwB,EAAxBA,WAAYjL,EAAY,EAAZA,UACpByB,EAAeC,qBAAWzD,GAA1BwD,YADgC,EAGbxB,oBAAS,GAHI,mBAGhCiL,EAHgC,KAGzBC,EAHyB,KAIjCC,EAAc,kBAAMD,GAAUD,IAE9BG,EAAkB,kBAAMF,GAAS,IAEjCG,EAAmB,WACvBH,GAAS,GACTnL,EAAU,CAACT,SAAU,QAASW,SAAU,aAwF1C,OAAOuB,EAlFH,sBAAK9B,UAAU,gBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,eAAC,IAAD,CAASoC,GAAG,IAAI+I,OAAK,EAACnL,UAAU,WAAWkB,QAASwK,EAApD,6BACmB,IACjB,qBACEzL,MAAO,CAACqI,QAAS,UACjBtI,UAAS,iBAAY8B,EAAYK,OAFnC,sBAOF,qBAAKnC,UAAU,gBAAgBkB,QAASuK,EAAxC,SACE,mBAAGzL,UAAWuL,EAAQ,eAAiB,qBAG3C,sBAAKvL,UAAWuL,EAAQ,mBAAqB,YAA7C,UACE,cAAC,IAAD,CACEnJ,GAAG,WACHpC,UAAS,mBAAc8B,EAAYK,OACnCjB,QAASwK,EAHX,qBAOA,cAAC,IAAD,CACEtJ,GAAG,IACHpC,UAAS,mBAAc8B,EAAYK,OACnCjB,QAASoK,EACTrL,MAAO,CAACmI,aAAc,QAJxB,oBAQA,cAAC,IAAD,CAAShG,GAAG,YAAYpC,UAAS,mBAAc8B,EAAYK,OAA3D,SACE,mBAAGnC,UAAU,aAAaC,MAAO,CAACkC,MAAO,mBAU/C,sBAAKnC,UAAU,oBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,eAAC,IAAD,CACEoC,GAAG,IACHpC,UAAU,WACVkB,QAASwK,EAHX,6BAKmB,IACjB,qBAAKzL,MAAO,CAACkC,MAAO,UAAWmG,QAAS,UAAxC,sBAEF,qBAAKtI,UAAU,gBAAf,SACE,mBACEA,UAAWuL,EAAQ,eAAiB,cACpCrK,QAASuK,SAIf,sBAAKzL,UAAWuL,EAAQ,mBAAqB,YAA7C,UACE,qBAAKvL,UAAU,oBAAoBkB,QAASyK,EAA5C,0BAGA,cAAC,IAAD,CACEvJ,GAAG,SACHpC,UAAU,oBACVkB,QAASwK,EAHX,mBAOA,cAAC,IAAD,CACEtJ,GAAG,WACHpC,UAAU,oBACVkB,QAASwK,EAHX,4BCCKE,MAnFf,WAAgB,IAAD,EACatL,mBAAS,MADtB,mBACNrB,EADM,KACC4M,EADD,OAEyBvL,mBAAS,MAFlC,mBAENwB,EAFM,KAEOgK,EAFP,OAGexL,oBAAS,GAHxB,mBAGNyL,EAHM,KAGErB,EAHF,KAMb,IAAKzL,GAAS+M,aAAaC,QAAQ,SAAU,CAC3CJ,EAASG,aAAaC,QAAQ,UAC9BvN,EAAIO,MAAQ+M,aAAaC,QAAQ,SAFU,IAGrCrM,EAAasM,IAAIC,OAAOzN,EAAIO,OAA5BW,SACNlB,EAAIkB,SAAWA,EAIjB,IAAIwM,EAAW,uCAAG,WAAO5L,GAAP,mBAAAqC,EAAA,+EAEEnE,EAAI2N,MAAM7L,GAFZ,cAEVb,EAFU,OAGdjB,EAAIO,MAAQU,EAAIV,MAHF,EAIKiN,IAAIC,OAAOzN,EAAIO,OAA5BW,EAJQ,EAIRA,SACNlB,EAAIkB,SAAWA,EACfiM,EAASlM,EAAIV,OACb+M,aAAaM,QAAQ,QAAS3M,EAAIV,OAPpB,kBAQP,CAAE4G,SAAS,IARJ,yCAUdQ,QAAQ/G,MAAM,gBAVA,kBAWP,CAAEuG,SAAS,EAAO0G,OAAM,OAXjB,0DAAH,sDAgBXC,EAAY,uCAAG,WAAOhM,GAAP,eAAAqC,EAAA,+EAECnE,EAAI+N,OAAOjM,GAFZ,cAEXb,EAFW,OAGfkM,EAASlM,EAAIV,OACb+M,aAAaM,QAAQ,QAAS3M,EAAIV,OAJnB,kBAKR,CAAE4G,SAAS,IALH,uCAOfQ,QAAQ/G,MAAM,iBAPC,kBAQR,CAAEuG,SAAS,EAAO0G,OAAM,OARhB,yDAAH,sDAaZG,EAAY,uCAAG,sBAAA7J,EAAA,sDACjBgJ,EAAS,MACTC,EAAe,MACfE,aAAaW,WAAW,SAHP,2CAAH,qDA0BhB,OAnBA/J,qBACE,WAAY,4CACV,gCAAAC,EAAA,+DACqBqJ,IAAIC,OAAOlN,GAAxBW,EADR,EACQA,SADR,kBAGqBlB,EAAIoM,YAAYlL,GAHrC,OAGQgN,EAHR,OAIId,EAAec,GAJnB,gDAMIvG,QAAQ/G,MAAR,MANJ,0DADU,sBAWNL,GAXO,WAAD,wBAYR4N,KAGJ,CAAC5N,EAAO8M,IAIR,eAAC,EAAYe,SAAb,CAAsBhM,MAAO,CAAEgB,cAAagK,iBAAgBpB,aAA5D,UACE,cAAC,EAAD,CACEY,WAAY,SAACnI,GAAD,OAAOuJ,EAAavJ,IAChC9C,UAAW,SAAC8C,GAAD,OAAOiJ,EAAYjJ,MAEhC,cAAC,EAAD,CACE9C,UAAW,SAAC8C,GAAD,OAAOiJ,EAAYjJ,IAC9B/B,WAAY,SAAC+B,GAAD,OAAOqJ,EAAarJ,UC/ExC4J,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7842dad3.chunk.js","sourcesContent":["import React from \"react\";\n\n/** Context: provides currentUser object and setter for it throughout app. */\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","/** @format */\n\nimport axios from \"axios\";\n\nconst BASE_URL = \n  \"https://programafriend.herokuapp.com\" || \"http://localhost:3001\";\n\n\nclass Paf {\n  static token;\n  static username;\n\n  //Request builder.\n  static async request(endpoint, data = {}, method = \"get\") {\n    // console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { authorization: `Bearer ${Paf.token}` };\n    const params = method === \"get\" ? data : {};\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      // console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  ///////////////// USERS\n\n  //Login\n  static async login(data) {\n    let res = await this.request(`auth/login`, data, \"post\");\n    return res;\n  }\n\n  //Signup\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n\n    return res;\n  }\n\n  //Get user profile\n  static async getUserInfo(username) {\n    let res = await this.request(`users/${username}`);\n    return res;\n  }\n\n  //Update User Portfolio\n  static async updateUserInfo(data) {\n    let res = await this.request(`users/${this.username}`, data, \"patch\");\n    return res;\n  }\n\n  ///////////////// FRIENDS\n\n  //Add a friend for a user.\n  static async addFriend(data) {\n    let res = await this.request(`friends/${Paf.username}`, data, \"post\");\n    return res;\n  }\n\n  //Get all friends for a user.\n  static async getAllFriends(username) {\n    let res = await this.request(`friends/${username}`);\n    return res;\n  }\n\n  //Get info on a specific friend\n  static async getFriendInfo(id, username) {\n    let res = await this.request(`friends/${Paf.username}/${id}`);\n    return res;\n  }\n\n  //Edit info on a friend\n  static async editFriend(id, data) {\n    let res = await this.request(\n      `friends/${Paf.username}/${id}`,\n      data,\n      \"patch\"\n    );\n    return res;\n  }\n\n  //Delete user friend.\n  static async deleteFriend(id) {\n    let data;\n    let res = await this.request(\n      `friends/${Paf.username}/${id}`,\n      data,\n      \"delete\"\n    );\n    return res;\n  }\n\n  ///////////////// STATEMENTS\n\n  //Add a statement to a friend.\n  static async addFriendStatement(data) {\n    let res = await this.request(`statements/${Paf.username}`, data, \"post\");\n    return res;\n  }\n\n  //Get info on a statment.\n  static async getStatementInfo(id) {\n    let res = await this.request(`statements/${Paf.username}/${id}`);\n    return res;\n  }\n\n  //Edit info on a statement\n  static async editStatement(id, data) {\n    let res = await this.request(\n      `statements/${Paf.username}/${id}`,\n      data,\n      \"patch\"\n    );\n    return res;\n  }\n\n  //Delete a statment.\n  static async deleteStatement(id) {\n    let data;\n    let res = await this.request(\n      `statements/${Paf.username}/${id}`,\n      data,\n      \"delete\"\n    );\n    return res;\n  }\n\n  ///////////////// RESPONSES\n\n  //Add a new response to a statement.\n  static async addStatementResponse(data) {\n    let res = await this.request(`responses/${Paf.username}`, data, \"post\");\n    return res;\n  }\n\n  //Edit info on a response\n  static async editResponse(id, data) {\n    let res = await this.request(\n      `responses/${Paf.username}/${id}`,\n      data,\n      \"patch\"\n    );\n    return res;\n  }\n\n  //Delete a response.\n  static async deleteResponse(id) {\n    let data;\n    let res = await this.request(\n      `responses/${Paf.username}/${id}`,\n      data,\n      \"delete\"\n    );\n    return res;\n  }\n\n  ///////////////// CHAT\n\n  //Chat\n  static async sendStatement(text) {\n    let res = await this.request(`chat/${Paf.username}`, text, \"post\");\n    return res;\n  }\n}\n\nexport default Paf;\n","import React from \"react\";\nimport \"./Home.css\";\nimport \"../../App.css\";\n\n//Basic hero section\nfunction Home() {\n  return (\n    <div className=\"home-container\">\n      <div className=\"top-section\">\n        <div className=\"quote\"><span>Talk</span> <span className=\"\">to a</span> Spanish Speaking <span className=\"green\">Robot</span></div>\n      </div>\n      <div className=\"middle-section\">\n      <div>\n        <div className=\"check-section\">\n         <i className=\"fas fa-check green\"></i>\n          <h2>Always have a speaking partner that's ready to talk</h2> \n        </div>\n        <div className=\"check-section\">\n          <i className=\"fas fa-check green\"></i>\n          <h2>Converse at a level you're comfortable with</h2> \n        </div>\n        <div className=\"check-section\">\n          <i className=\"fas fa-check green\"></i>\n          <h2>Improve your real conversation rythm</h2> \n        </div>\n      </div>\n      </div>\n      <div className=\"bottom-section\">\n        <div className=\"footer-right\">\n          <h5>Developed by: Nate Azevedo</h5>\n          <div style={{padding: '20px 0 0 0'}}>\n            <span className=\"connect\">Let's connect! - </span> <a href=\"https://www.linkedin.com/in/nateazevedo/\" className=\"linkedin green\">LinkedIn</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/** @format */\n\nimport React, {useState} from \"react\";\nimport \"./Login.css\";\n\n//Loginfunc is passed down from App.js as a prop. This component passes the loginfunc down to the form.\nfunction Login({loginFunc}) {\n  let [formData, setFormData] = useState({username: \"\", password: \"\"});\n\n  function handleChange(e) {\n    let {name, value} = e.target;\n    setFormData((old) => ({\n      ...old,\n      [name]: value,\n    }));\n  }\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"login-form\">\n        <input\n          className=\"login-input\"\n          value={formData.username}\n          name=\"username\"\n          onChange={(e) => handleChange(e)}\n          placeholder=\"username\"\n        />\n        <input\n          className=\"login-input\"\n          value={formData.password}\n          name=\"password\"\n          onChange={(e) => handleChange(e)}\n          placeholder=\"password\"\n        />\n        <button onClick={() => loginFunc(formData)} className=\"login-submit\">Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","/** @format */\n\nimport React, {useState} from \"react\";\nimport \"./Signup.css\";\n\n//SignupFunc is passed down from App.js as a prop. This component passes the signupFunc down to the form.\n\nfunction Signup({signupFunc}) {\n  let [formData, setFormData] = useState({username: \"\", password: \"\", email: \"\", firstName:\"\", lastName:\"\"});\n\n  function handleChange(e) {\n    let {name, value} = e.target;\n    setFormData((old) => ({\n      ...old,\n      [name]: value,\n    }));\n  }\n  return (\n    <div className=\"signup-container\">\n      <form className=\"login-form\">\n        <input\n          className=\"login-input\"\n          value={formData.username}\n          name=\"username\"\n          onChange={(e) => handleChange(e)}\n          placeholder=\"username\"\n        />\n        <input\n          className=\"login-input\"\n          value={formData.password}\n          name=\"password\"\n          onChange={(e) => handleChange(e)}\n          placeholder=\"password\"\n        />\n  \n        <input\n          className=\"login-input\"\n          value={formData.firstName}\n          name=\"firstName\"\n          onChange={(e) => handleChange(e)}\n          placeholder=\"first name\"\n        />\n\n        <input\n          className=\"login-input\"\n          value={formData.lastName}\n          name=\"lastName\"\n          onChange={(e) => handleChange(e)}\n          placeholder=\"last name\"\n        />\n        <input\n          className=\"login-input\"\n          value={formData.email}\n          name=\"email\"\n          onChange={(e) => handleChange(e)}\n          placeholder=\"email\"\n        />\n        <button onClick={() => signupFunc(formData)} className=\"login-submit\">Sign Up</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from 'react'\nimport \"./Loading.css\"\n\nfunction Loading() {\n  return (\n    <div className=\"loading-container\">\n      <div class=\"lds-dual-ring\"></div>\n    </div>\n  )\n}\n\nexport default Loading\n","import React, {useState, useContext} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./Friend.css\";\nimport UserContext from \"../../UserContext\";\n\n//Renders individual friend. State for edit form and dropdown selections for each friend live here.\nfunction Friend({name, description, id, addFriendFunc, add = false}) {\n  const {currentUser} = useContext(UserContext);\n  const INITIAL_STATE = {name, description};\n  const [formData, setFormData] = useState(INITIAL_STATE);\n\n  const handleChange = (evt) => {\n    let {name, value} = evt.target;\n    setFormData((old) => ({\n      ...old,\n      [name]: value,\n    }));\n  };\n\n  if (add) {\n    return (\n      <div className=\"friend add-friend\">\n        <div className=\"add-friend-info\">\n          <input\n            className=\"friend-name add-friend-input\"\n            name=\"name\"\n            placeholder=\"name\"\n            value={formData.name}\n            onChange={(evt) => handleChange(evt)}\n             autoComplete=\"off\"\n          />\n          <input\n            className={`friend-description-main add-friend-input accent ${currentUser.color}`}\n            placeholder=\"description\"\n            name=\"description\"\n            value={formData.description}\n            onChange={(evt) => handleChange(evt)}\n             autoComplete=\"off\"\n          />\n        </div>\n        <span className=\"submit-friend\" onClick={() => addFriendFunc(formData)}>\n          Save\n        </span>\n      </div>\n    );\n  } else {\n    return (\n      <Link className=\"friend\" to={`/friend/${id}`}>\n        <h5 className=\"friend-name\">{name}</h5>\n        <p className={`friend-description-main accent ${currentUser.color}`}>\n          {description}\n        </p>\n      </Link>\n    );\n  }\n}\n\nexport default Friend;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport Friend from \"../../components/friend/Friend\";\nimport Paf from \"../../api.js\";\nimport \"./FriendsListContainer.css\";\n\n//Get and display friends.\n\nfunction FriendsListContainer({ username, color }) {\n  const [friends, setFriends] = useState([]);\n  const [fetch, setFetch] = useState(false);\n  const [addStatus, setAddStatus] = useState(false);\n\n  //GET ALL Friends\n  useEffect(() => {\n      async function getFriends() {\n        let friends = await Paf.getAllFriends(username);\n        setFriends(friends);\n      }\n      getFriends();\n    },\n    [fetch, username]\n  );\n  \n  //CREATE\n  const addFriend = async (formData) => {\n    await Paf.addFriend(formData);\n    setFetch((old) => !old);\n    setAddStatus(false)\n  };\n\n    //ADDS EMPTY STATEMENT FORM\n  function addFriendScreen() {\n    setAddStatus(true);\n    setFriends((old) => [...old, {blank: true}]);\n  }\n\n  function cancelAddFriend(){\n    setAddStatus(false);\n    setFriends((old) => {\n      let removedLast = [...old];\n      removedLast.pop();\n      return removedLast\n    });\n  }\n\n  //GENERATE FRIENDS\n  let allFriends = friends\n    ? friends.map((f, i) => {\n      if(f.blank){\n        return (\n          <Friend\n            name=''\n            description=''\n            key='999'\n            add={true}\n            addFriendFunc={addFriend}\n          />\n        );\n      }else{\n        return (\n          <Friend\n            name={f.name}\n            description={f.description}\n            id={f.id}\n            key={i}\n          />\n        );\n      }\n      })\n    : null;\n\n\n  //Returns list of all friends a user has created.\n  return (\n      <div className=\"friends-list\">\n        {allFriends}\n        <div className=\"add-friend-button-container\">\n          <button className={`add-friend-button accent ${!addStatus ? color : 'cancel-add'}`} onClick={!addStatus ? addFriendScreen : cancelAddFriend}>{addStatus ? '-' : '+'}</button>\n        </div>\n      </div>\n  );\n}\n\nexport default FriendsListContainer;\n","\nimport React, {useState, useContext} from \"react\";\nimport \"./Response.css\";\nimport UserContext from '../../UserContext'\n//Renders an individual response.\nfunction Response({s, deleteFunc, editFunc, index, message, addResponseStatus, addScreenFunc, addFunc, cancelAddResponse}) {\n  const [edit, setEdit] = useState(true);\n  const [formData, setFormData] = useState({response: s?.response});\n  const {currentUser} = useContext(UserContext)\n  function toggleEdit() {\n    setEdit((old) => !old);\n  }\n\n  //Handles form inputs, updates state from info in evt.target.\n  const handleChange = (evt) => {\n    const {name, value} = evt.target;\n    setFormData((fData) => ({\n      ...fData,\n      [name]: value,\n    }));\n  };\n\n\n  if(s){\n    return (\n      <div className=\"response\" key={s.id}>\n      <span className={`response-index`}>{index + 1}</span>\n        <input\n          value={formData.response}\n          disabled={edit}\n          name=\"response\"\n          onChange={handleChange}\n          className={`inputText ${edit ? '' : 'editable'}`}\n        />\n        <div className=\"response-options\">\n          <div\n            onClick={edit ? toggleEdit : () => {toggleEdit(); editFunc(s.id, formData)}}\n            className=\"response-edit\"\n          >\n            {edit ? <i className=\"fas fa-pen edit-statement\"></i>  : \"Save\"}\n          </div>\n          <div\n            onClick={edit ? toggleEdit : () => {editFunc(formData)}}\n            className=\"response-delete\"\n          >\n            {edit ? <i className=\"fa fa-trash-alt delete-statement\"></i> : \"Save\"}\n          </div>\n        </div>\n      </div>\n    );\n  } else if (addFunc){\n    return (\n      <div className=\"response\">\n      <span className=\"response-index\">{index + 1}</span>\n        <input\n          value={formData.response}\n          name=\"response\"\n          onChange={handleChange}\n          className=\"inputText editable\"\n          autoComplete=\"off\"\n        />\n        <div className=\"response-options\">\n          <div\n            onClick={cancelAddResponse}\n            className=\"response-delete\"\n          >\n            {\"Cancel\"}\n          </div>\n          <div\n            onClick={() => {addFunc(formData)}}\n            className=\"\"\n          >\n            {\"Save\"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  else{\n    return (\n      <div className=\"response\" >\n        <span className=\"response-index\">{message}</span>\n        <div className=\"response-options\">\n          <button\n            className={`add-response ${currentUser?.color}`}\n            onClick={addScreenFunc}\n            disabled={addResponseStatus}\n          >\n            +\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Response;\n","import \"./ResponsesContainer.css\";\nimport React, {useState, useEffect} from \"react\";\nimport Paf from \"../../api.js\";\nimport Response from \"../../components/response/Response\";\n\n//All api requests regarding responses are initiated here. (CRUD)\nfunction ResponsesContainer({id, showResponses}) {\n  const [responses, setResponses] = useState([]);\n  const [addResponseStatus, setAddResponseStatus] = useState(false);\n  const [fetch, setFetch] = useState(false);\n\n  //ADDS EMPTY RESPONSE FORM\n  function addResponseScreen() {\n    setAddResponseStatus(true);\n    setResponses((old) => [...old, {blank: true}]);\n  }\n\n  function cancelAddResponse(){\n    setAddResponseStatus(false);\n    setResponses((old) => {\n      let newArr = [...old];\n      newArr.pop();\n      return newArr;\n      });\n  }\n\n  //Get all responses upon render\n  useEffect(() => {\n    async function getStatementInfo() {\n      let statement = await Paf.getStatementInfo(id);\n      setResponses(statement.responses);\n      delete statement.responses;\n    }\n    getStatementInfo();\n  }, [fetch, id]);\n\n  //ADD RESPONSE\n  const addResponse = async (formData) => {\n    formData.statement_id = parseInt(id);\n    await Paf.addStatementResponse(formData);\n    setAddResponseStatus(false);\n    setFetch((old) => !old);\n  };\n\n  // Edit RESPONSE\n  async function editResponse(id, data) {\n    await Paf.editResponse(id, data);\n    setFetch((old) => !old);\n  }\n\n  // Delete a response\n  async function deleteResponse(id) {\n    await Paf.deleteResponse(id);\n    setFetch((old) => !old);\n  }\n\n  if (responses.length) {\n    return (\n      <div\n        className={`responses-container ${\n          showResponses ? \"showResponses\" : \"\"\n        }`}\n      >\n        {responses.map((s, i) => {\n          if (s.blank) {\n            return (\n              <>\n                <Response addFunc={addResponse} key={i} index={i} cancelAddResponse={cancelAddResponse}/>\n              </>\n            );\n          } else if (responses.length === i + 1) {\n            return (\n              <>\n                <Response\n                  s={s}\n                  deleteFunc={deleteResponse}\n                  editFunc={editResponse}\n                  key={s.id}\n                  index={i}\n                />\n                <Response\n                  message=\"\"\n                  addScreenFunc={addResponseScreen}\n                  addResponseStatus={addResponseStatus}\n                />\n              </>\n            );\n          } else {\n            return (\n              <Response\n                s={s}\n                deleteFunc={deleteResponse}\n                editFunc={editResponse}\n                key={s.id}\n                index={i}\n              />\n            );\n          }\n        })}\n      </div>\n    );\n  } else {\n    return (\n      <div\n        className={`responses-container ${\n          showResponses ? \"showResponses\" : \"\"\n        }`}\n      >\n        <Response\n          message=\"No responses have been added\"\n          addScreenFunc={addResponseScreen}\n          addResponseStatus={addResponseStatus}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ResponsesContainer;\n","/** @format */\n\nimport \"./Chat.css\";\nimport Paf from \"../../api.js\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n//All api request regarding chatting are intiated here. (Paf.sendStatement)\n\nfunction Chat() {\n  const [formData, setFormData] = useState({ statement: \"\" });\n  const { id } = useParams();\n  const [text, setText] = useState([{ statement: \"lets chat\" }]);\n\n  //handles form inputs, inputs state. Controlled component\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setFormData((fData) => ({\n      ...fData,\n      [name]: value,\n    }));\n  };\n\n  //sends text to server, server responses with resposne.\n  const addText = async (evt) => {\n    evt.preventDefault();\n    setText((data) => [...data, formData]);\n    formData.friend_id = id;\n    let res = await Paf.sendStatement(formData);\n    setText((data) => [...data, { statement: res }]);\n    setFormData({ statement: \"\" });\n    return { success: true };\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-room-container\">\n        <ul className=\"chat-spot\">\n          {text.map((t, i) => {\n            return (\n              <li className=\"chat-text\" key={i}>\n                {t.statement}\n              </li>\n            );\n          })}\n        </ul>\n\n        <form className=\"chat-form\" autoComplete=\"off\" onSubmit={addText}>\n          <input\n            type=\"text\"\n            name=\"statement\"\n            className=\"chat-input\"\n            value={formData.statement}\n            onChange={handleChange}\n            autoComplete=\"off\"\n          ></input>\n          <button className=\"chat-button\" type=\"submit\">\n            Send\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","import React, {useState, useContext, useRef} from \"react\";\nimport \"./statement.css\";\nimport ResponsesContainer from \"../../screens/responses-container/ResponsesContainer\";\nimport UserContext from '../../UserContext'\n//Generates display for each individual statement.\n\nfunction Statement({statement, id, editFunc, deleteFunc, addFunc, add, index}) {\n  const [edit, setEdit] = useState(true);\n  const input = useRef(null)\n  const [formData, setFormData] = useState({statement});\n  const [showResponses, setShowResponses] = useState(false)\n  const {currentUser} = useContext(UserContext)\n  function toggleEdit() {\n    setEdit((old) => !old);\n  }\n\n  function handleFocus(){\n    console.log(input.current)\n    input.current.focus();\n  }\n\n  if(!edit){\n    handleFocus();\n    console.log('focused')\n  }\n  \n  //Handles form inputs, updates state from info in evt.target.\n  const handleChange = (evt) => {\n    const {name, value} = evt.target;\n    setFormData((fData) => ({\n      ...fData,\n      [name]: value,\n    }));\n  };\n\n  if(add){\n    return (\n      <div className=\"statements-responses-container\">\n        <div className=\"statement-container\">\n          <input value={formData.statement} name=\"statement\" onChange={handleChange} className=\"statement add-statement-container\" autoComplete=\"off\"/>\n          <div className=\"statement-options\">\n            <div\n              className=\"delete-statement\"\n              onClick={() => addFunc(formData)}\n            >\n              {\"Save\"}\n            </div>\n          </div>\n        </div>\n      </div>\n    );  \n  }else{\n    return (\n      <div className=\"statements-responses-container\" >\n        <div className=\"statement-container\">\n        <i className={`fa ${showResponses ? 'fa-chevron-up' : 'fa-chevron-down'} index ${currentUser?.color}`} onClick={() => setShowResponses((old) => !old)}></i>\n          <input type='text' ref={input} value={formData.statement} disabled={edit} name=\"statement\" onChange={handleChange} className={`statement ${edit ? '' : 'editable'}`} autoComplete=\"off\" autoFocus/>\n          <div className=\"statement-options\">\n            <div\n              className=\"edit-statement\"\n              onClick={ edit ? (evt) => {toggleEdit();} : () => { toggleEdit(); editFunc(id, formData); }}\n            >\n              {edit ? <i className=\"fas fa-pen edit-statement\"></i> : \"Save\"}\n            </div>\n            <div\n              className=\"delete-statement\"\n              onClick={() => deleteFunc(id)}\n            >\n              {edit ? <i className=\"fa fa-trash-alt delete-statement\"></i> : \"\"}\n            </div>\n          </div>\n        </div>\n        <ResponsesContainer id={id} showResponses={showResponses}/>\n      </div>\n    );\n  }\n\n}\n\nexport default Statement;\n","import React from 'react'\nimport './Confirmation.css'\n\nfunction Confirmation() {\n  return (\n    <div className=\"confirmation-container\">\n      <span>Sucessfully Updated!</span>\n    </div>\n  )\n}\n\nexport default Confirmation\n","import React from 'react'\nimport './ConfirmMessage.css'\n\nfunction ConfirmMessage({cancelDelete, confirmDelete}) {\n  return (\n    <div className=\"confirm-container\">\n      <div className=\"confirm-inner-container\">\n        <span>Are you sure you want to delete this friend?</span>\n        <div className=\"confirmation-buttons\">\n          <button onClick={cancelDelete}>No</button>\n          <button onClick={confirmDelete}>Yes</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ConfirmMessage\n","import React, {useState, useEffect} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Paf from \"../../api.js\";\nimport Statement from \"../../components/statement/Statement\";\nimport {Link} from \"react-router-dom\";\nimport \"./FriendInfoContainer.css\";\nimport {useHistory} from 'react-router-dom'\nimport Confirmation from \"../../components/confirmation/Confirmation.js\";\nimport ConfirmMessage from \"../../components/confirm/ConfirmMessage.js\";\n\n//Should gather all info on friend and statements from here. (CRUD)\nfunction FriendInfoContainer({color}) {\n  const {id} = useParams();\n  const [statements, setStatements] = useState([]);\n  const [friend, setFriend] = useState();\n  const [edit, setEdit] = useState(true);\n  const [formData, setFormData] = useState({name: '', description: ''});\n  const [addStatus, setAddStatus] = useState(false);\n  const [fetch, setFetch] = useState(false);\n  const [confirm, setConfirm] = useState(false)\n  const [confirmMessageState, setConfirmMessageState] = useState(false)\n  const history = useHistory();\n\n  //TOGGLE FRIEND EDIT\n  function toggleEdit() {\n    setEdit((old) => !old);\n  }\n\n  //HANDLES FORM INPUTS\n  const handleChange = (evt) => {\n    const {name, value} = evt.target;\n    setFormData((fData) => ({\n      ...fData,\n      [name]: value,\n    }));\n  };\n\n  //GET FRIEND AND STATEMENTS\n  useEffect(() => {\n    async function getFriendInfo() {\n      let friend = await Paf.getFriendInfo(id);\n      setFormData(() => ({name: friend.name, description: friend.description}));\n      setFriend(friend);\n      setStatements(friend.statements);\n    }\n    getFriendInfo();\n  }, [fetch, id]);\n\n  //ADD STATEMENT\n  const addStatement = async (formData) => {\n    formData.friend_id = parseInt(id);\n    try{\n      await Paf.addFriendStatement(formData);\n      setAddStatus(false);\n      setFetch((old) => !old);\n      setConfirm(true)\n      setTimeout(() => {\n        setConfirm(false)\n      }, 1000)\n    } catch(e){\n      setConfirm(true)\n    }\n  };\n\n  // EDIT STATEMENT\n  async function editStatement(id, data) {\n    await Paf.editStatement(id, data);\n    setFetch((old) => !old);\n  }\n\n  // DELETE STATEMENT\n  async function deleteStatement(id) {\n    await Paf.deleteStatement(id);\n    setAddStatus(false);\n    setFetch((old) => !old);\n  }\n\n  //UPDATE FRIEND\n  async function editFriend() {\n    await Paf.editFriend(friend.id, formData);\n    setFetch((old) => !old);\n    setEdit(true)\n  }\n\n  function confirmDeleteFriend(){\n    setConfirmMessageState(true)\n  }\n\n  //DELETE FRIEND\n  async function deleteFriend() {\n    await Paf.deleteFriend(id);\n    history.push(\"/\");\n  }\n\n  //ADDS EMPTY STATEMENT FORM\n  function addStatementScreen() {\n    setAddStatus(true);\n    setStatements((old) => [...old, {blank: true}]);\n  }\n\n  function cancelAddStatement(){\n    setAddStatus(false);\n    setStatements((old) => {\n      let canceled = [...old]\n      canceled.pop();\n      return canceled\n      });\n  }\n\n  let confirmation = confirm ? <Confirmation/> : null;\n\n  return (\n    <div className=\"main-friend-container flex-column\">\n\n      <div className=\"main-friend-info flex-column\">\n\n        <div className=\"main-friend-form flex-column\">\n          <input\n            value={formData?.name}\n            disabled={edit}\n            name=\"name\"\n            onChange={handleChange}\n            className=\"main-friend-form-input main-friend-name\"\n            style={{borderBottom: !edit ? `solid gold 1px` : 'none'}}\n          />\n          <input\n            value={formData?.description}\n            disabled={edit}\n            name=\"description\"\n            onChange={handleChange}\n            className={`main-friend-form-input main-friend-description ${color}`}\n            style={{borderBottom: !edit ? `solid gold 1px` : 'none'}}\n          />\n        </div>\n\n        <div className=\"main-friend-options flex-column\">\n          <Link\n            to={`/chat/${friend?.id}`}\n            className=\"flex-column\"\n          >\n            <i className=\"icon fas fa-comment-dots flex-column\"></i>\n            <span className=\"icon-description\">Text Chat</span>\n          </Link>\n          <Link\n            to={`/facechat/${friend?.id}`}\n            className=\"flex-column\"\n          >\n            <i className=\"icon fas fa-microphone\"></i>\n            <span className=\"icon-description\">Face Chat</span>\n          </Link>\n          <div onClick={edit ? toggleEdit : editFriend} className=\"flex-column\">\n            {edit ? <i className=\"icon fas fa-pen edit-friend\"></i> : <span style={{color: 'white', cursor: 'pointer'}}>Save</span>}\n            <span className=\"icon-description\" style={{display:!edit ? 'none' : ''}}>Edit Info</span>\n          </div>\n          <div className=\"flex-column\">\n            <i className=\"icon fa fa-trash-alt\" onClick={confirmDeleteFriend}></i>\n            <span className=\"icon-description\">Delete Friend</span>\n          </div>\n        </div>\n\n      </div>\n\n      <div className=\"statements-container\" id=\"spot\">\n        {statements.map((s, i) => {\n          if (s.blank) {\n            return (\n              <Statement\n                addFunc={addStatement}\n                key={i}\n                add={true}\n                statement=\"\"\n                index={i}\n              />\n            );\n          } else {\n            return (\n              <Statement\n                statement={s.statement}\n                id={s.id}\n                editFunc={editStatement}\n                deleteFunc={deleteStatement}\n                fId={id}\n                key={s.id}\n                add={false}\n                index={i}\n              />\n            );\n          }\n        })}\n      </div>\n      <div className=\"add-statement-containers\">\n        <button\n          className={`add-statement ${color}`}\n          onClick={!addStatus ? addStatementScreen : cancelAddStatement}\n        >\n          {!addStatus ? '+' : '-'}\n        </button>\n      </div>\n      {confirmation}\n      {confirmMessageState && <ConfirmMessage cancelDelete={() => setConfirmMessageState(false)} confirmDelete={deleteFriend}/>}\n    </div>\n  );\n}\n\nexport default FriendInfoContainer;\n","/** @format */\n\nimport React, {useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport \"./facechat.css\";\nimport Paf from \"../../api.js\";\n\nfunction FaceChat() {\n  const [letter, setLetter] = useState(\"base\");\n  const [sentence, setSentence] = useState(\"hola, quieres hablar?\");\n  const [recording, setRecording] = useState(\"blank\");\n  const [talkable, setTalkable] = useState(\"talk\");\n  const {id} = useParams();\n\n  var synth = window.speechSynthesis;\n  var utterThis = new SpeechSynthesisUtterance(sentence);\n  let voices = synth.getVoices();\n  utterThis.voice = voices[15];\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = new SpeechRecognition();\n\n  function speak() {\n    var i = 1;\n    let word = sentence.split(\"\");\n\n    function myLoop() {\n      setTimeout(function () {\n        setLetter(word[i]);\n        i++;\n        if (i < 10) {\n          myLoop();\n        }\n      }, 100);\n    }\n    synth.speak(utterThis);\n    myLoop();\n  }\n\n\n  function startListening() {\n    setRecording(\"recording\");\n    setTalkable(\"no\");\n    recognition.start();\n  }\n\n  recognition.onresult = function (event) {\n    setRecording(\"blank\");\n    setTalkable(\"talk\");\n    var transcript = event.results[0][0].transcript;\n    // var confidence = event.results[0][0].confidence;\n    setSentence(transcript);\n    // sends text to server, server responses with resposne.\n    const addText = async () => {\n      let info = {\n        statement: transcript,\n        friend_id: id,\n      };\n      let res = await Paf.sendStatement(info);\n      setSentence(res);\n    };\n    addText();\n  };\n\n  return (\n    <div className=\"head-container\">\n      <div className=\"head\">\n        <div className=\"eyes\">\n          <div className=\"eyeball\"></div>\n          <div className=\"eyeball\"></div>\n        </div>\n        <div className={`mouth ${letter}`}></div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <div\n          onClick={startListening}\n          className={`startRecording ${recording}`}\n        ></div>\n        <div onClick={speak} className={`${talkable}`}>\n          {\">\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FaceChat;\n","import React, {useState, useEffect, useContext} from \"react\";\nimport \"./Settings.css\";\nimport API from \"../../api\";\nimport UserContext from \"../../UserContext\";\n\nfunction Settings({username}) {\n  const {setReload, currentUser} = useContext(UserContext);\n  const [formData, setFormData] = useState();\n\n  //Handles form inputs, updates state from info in evt.target.\n  const handleChange = (evt) => {\n    const {name, value} = evt.target;\n    setFormData((fData) => ({\n      ...fData,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    async function getUserInfo() {\n      let info = await API.getUserInfo(username);\n      delete info.isAdmin;\n      setFormData(info);\n    }\n    getUserInfo();\n  }, [username]);\n\n  function handleColorChange(color) {\n    setFormData((fData) => ({\n      ...fData,\n      color: color,\n    }));\n  }\n\n  async function updateUser() {\n    await API.updateUserInfo(formData);\n    setReload((old) => !old);\n  }\n\n  return (\n    <div className=\"settings-container\">\n      <div className=\"user-info-container\">\n        Username:\n        <input\n          value={formData?.username}\n          name=\"username\"\n          onChange={handleChange}\n          className=\"user-info\"\n        />\n        Lastname:\n        <input\n          value={formData?.lastName}\n          name=\"lastName\"\n          onChange={handleChange}\n          className=\"user-info\"\n        />\n        Firstname:\n        <input\n          value={formData?.firstName}\n          name=\"firstName\"\n          onChange={handleChange}\n          className=\"user-info\"\n        />\n        Email:\n        <input\n          value={formData?.email}\n          name=\"email\"\n          onChange={handleChange}\n          className=\"user-info\"\n        />\n      </div>\n      <div className=\"colors\">\n        <div style={{color: 'white'}}>Choose an accent color:</div>\n        <div className=\"colors\">\n          <div className={`color orange ${formData?.color === 'orange' ? 'chosen' : ''}`} onClick={() => handleColorChange('orange')}></div>\n          <div className={`color blue ${formData?.color === 'blue' ? 'chosen' : ''}`} onClick={() => handleColorChange('blue')}></div>\n          <div className={`color green ${formData?.color === 'green' ? 'chosen' : ''}`} onClick={() => handleColorChange('green')}></div>\n        </div>\n      </div>\n      <button className={`submit-user-info ${currentUser.color}`} onClick={() => updateUser()}>\n        Edit User Info\n      </button>\n    </div>\n  );\n}\n\nexport default Settings;\n","/** @format */\n\nimport React, {useContext, Suspense} from \"react\";\nimport {Switch, Redirect, Route} from \"react-router-dom\";\nimport UserContext from \"../UserContext\";\nimport Home from \"../screens/home/Home\";\nimport Login from \"../auth/Login\";\nimport Signup from \"../auth/Signup\";\nimport Loading from \"../screens/loading/Loading\"\nimport FriendsC from \"../screens/friends-list-container/FriendsListContainer\";\nimport ResponseC from \"../screens/responses-container/ResponsesContainer\";\nimport Chat from \"../screens/text-chat/Chat\";\nimport StatementC from \"../screens/friend-info-container/FriendInfoContainer\";\nimport Facechat from \"../screens/face-chat/FaceChat\";\nimport Settings from \"../screens/settings/Settings\";\n//Handles all front end routing. Some routes are protected by UserContext(logged in or not)\nfunction Routes({loginFunc, signupFunc}) {\n  const {currentUser} = useContext(UserContext);\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        {!currentUser ? <Suspense fallback={<Loading/>}><Home /></Suspense> : <Redirect to=\"/friends\" />}\n      </Route>\n      <Route path=\"/friend/:id\" exact>\n        <StatementC color={currentUser?.color}/>\n      </Route>\n      <Route path=\"/responses/:id\" exact>\n        <ResponseC />\n      </Route>\n      <Route path=\"/chat/:id\" exact>\n        <Chat />\n      </Route>\n      <Route path=\"/facechat/:id\" exact>\n        <Facechat />\n      </Route>\n      <Route path=\"/settings\" exact>\n                {currentUser ? (\n          <Settings username={currentUser.username} />\n        ) : (\n          <Redirect to=\"/\" />\n        )}\n      </Route>\n      <Route path=\"/friends\" exact>\n        {currentUser ? (\n          <FriendsC username={currentUser.username}  color={currentUser.color}/>\n        ) : (\n          <Redirect to=\"/\" />\n        )}\n      </Route>\n      <Route path=\"/login\" exact>\n        {currentUser ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Login loginFunc={(f) => loginFunc(f)} />\n        )}\n      </Route>\n      <Route path=\"/sign-up\" exact>\n        {currentUser ? (\n          <Redirect to=\"/friends\" />\n        ) : (\n          <Signup signupFunc={(f) => signupFunc(f)} />\n        )}\n      </Route>\n      <Route path=\"/\">\n        {currentUser ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Signup signupFunc={(f) => signupFunc(f)} />\n        )}\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React, {useState, useContext} from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport UserContext from \".././UserContext\";\nimport \"./Navbar.css\";\n\n//Context is consumed here to determine login status.\n\nfunction NavBar({logoutFunc, loginFunc}) {\n  const {currentUser} = useContext(UserContext);\n\n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click);\n\n  const closeMobileMenu = () => setClick(false);\n\n  const closeMobileGuest = () => {\n    setClick(false);\n    loginFunc({username: \"guest\", password: \"guest55\"});\n  };\n\n  //Generate nav for logged in users.\n  function loggedInNav() {\n    return (\n      <nav className=\"nav-container\">\n        <div className=\"nav-inner-left\">\n          <NavLink to=\"/\" exact className=\"nav-logo\" onClick={closeMobileMenu}>\n            Spanish Speaking{\" \"}\n            <div\n              style={{display: \"inline\"}}\n              className={`accent ${currentUser.color}`}\n            >\n              Robot\n            </div>\n          </NavLink>\n          <div className=\"nav-hamburger\" onClick={handleClick}>\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\n          </div>\n        </div>\n        <div className={click ? \"nav-links active\" : \"nav-links\"}>\n          <NavLink\n            to=\"/friends\"\n            className={`nav-link ${currentUser.color}`}\n            onClick={closeMobileMenu}\n          >\n            Friends\n          </NavLink>\n          <NavLink\n            to=\"/\"\n            className={`nav-link ${currentUser.color}`}\n            onClick={logoutFunc}\n            style={{borderBottom: 'none'}}\n          >\n            Logout\n          </NavLink>\n          <NavLink to=\"/settings\" className={`nav-link ${currentUser.color}`}>\n            <i className=\"fas fa-cog\" style={{color: \"white\"}}></i>\n          </NavLink>\n        </div>\n      </nav>\n    );\n  }\n\n  //Generate nav for logged out users.\n  function loggedOutNav() {\n    return (\n      <nav className=\"nav-container out\">\n        <div className=\"nav-inner-left\">\n          <Link\n            to=\"/\"\n            className=\"nav-logo\"\n            onClick={closeMobileMenu}\n          >\n            Spanish Speaking{\" \"}\n            <div style={{color: \"#1fa58a\", display: \"inline\"}}>Robot</div>\n          </Link>\n          <div className=\"nav-hamburger\">\n            <i\n              className={click ? \"fas fa-times\" : \"fas fa-bars\"}\n              onClick={handleClick}\n            />\n          </div>\n        </div>\n        <div className={click ? \"nav-links active\" : \"nav-links\"}>\n          <div className=\"nav-link out-link\" onClick={closeMobileGuest}>\n            Try as guest\n          </div>\n          <Link\n            to=\"/login\"\n            className=\"nav-link out-link\"\n            onClick={closeMobileMenu}\n          >\n            Login\n          </Link>\n          <Link\n            to=\"/sign-up\"\n            className=\"nav-link out-link\"\n            onClick={closeMobileMenu}\n          >\n            Sign Up\n          </Link>\n        </div>\n      </nav>\n    );\n  }\n  //Check if logged in or not from context.\n  return currentUser ? loggedInNav() : loggedOutNav();\n}\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport UserContext from \"./UserContext\";\nimport jwt from \"jsonwebtoken\";\nimport Paf from \"./api.js\";\nimport Routes from \"./nav/Routes\";\nimport Navbar from \"./nav/Navbar\";\nimport \"./App.css\";\n\n//API calls for (signup, login, user fetch) are initiated from this container.\n//API calls are truly called from the Paf class located in /api.js\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [reload, setReload] = useState(false);\n\n  //If token is not in state, check local storage and update state. Update Paf class static token variable.\n  if (!token && localStorage.getItem(\"token\")) {\n    setToken(localStorage.getItem(\"token\"));\n    Paf.token = localStorage.getItem(\"token\");\n    let { username } = jwt.decode(Paf.token);\n    Paf.username = username;\n  }\n\n  //LOGIN. Call api -> setToken in state -> set token in localStorage -> Return {\"success\" : true or false}.\n  let handleLogin = async (formData) => {\n    try {\n      let res = await Paf.login(formData);\n      Paf.token = res.token;\n      let { username } = jwt.decode(Paf.token);\n      Paf.username = username;\n      setToken(res.token);\n      localStorage.setItem(\"token\", res.token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\");\n      return { success: false, errors };\n    }\n  };\n\n  //SIGN UP. Call api -> setToken in state -> set token in localStorage -> Return {\"success\" : true or false}.\n  let handleSignup = async (formData) => {\n    try {\n      let res = await Paf.signup(formData);\n      setToken(res.token);\n      localStorage.setItem(\"token\", res.token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"signup failed\");\n      return { success: false, errors };\n    }\n  };\n\n  //LOGOUT. Clear state and local storage.\n  let handleLogout = async () => {\n    setToken(null);\n    setCurrentUser(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  //If token state changes from intial null value, decode token for username, request user infomation from API and set currentUser state. username is decoded from jwt.\n  useEffect(\n    function () {\n      async function userInfo() {\n        let { username } = jwt.decode(token);\n        try {\n          let user = await Paf.getUserInfo(username);\n          setCurrentUser(user);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n      //Only call this if there is a token present.\n      if (token) {\n        userInfo();\n      }\n    },\n    [token, reload]\n  );\n\n  return (\n    <UserContext.Provider value={{ currentUser, setCurrentUser, setReload }}>\n      <Navbar\n        logoutFunc={(f) => handleLogout(f)}\n        loginFunc={(f) => handleLogin(f)}\n      />\n      <Routes\n        loginFunc={(f) => handleLogin(f)}\n        signupFunc={(f) => handleSignup(f)}\n      />\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n//Simply renders App wrapped in BrowserRouter as Router.\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}