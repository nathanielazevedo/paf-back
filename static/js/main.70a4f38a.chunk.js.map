{"version":3,"sources":["UserContext.js","api.js","screens/home/Home.js","auth/Login.js","auth/Signup.js","components/friend/Friend.js","screens/friends-list-container/FriendsListContainer.js","components/response/Response.js","screens/responses-container/ResponsesContainer.js","screens/text-chat/brain.jpg","screens/text-chat/Chat.js","components/statement/Statement.js","screens/friend-info-container/FriendInfoContainer.js","screens/face-chat/FaceChat.js","screens/settings/Settings.js","nav/Routes.js","nav/Navbar.js","App.js","index.js"],"names":["UserContext","React","createContext","BASE_URL","Paf","endpoint","data","method","url","headers","authorization","token","params","axios","message","response","error","Array","isArray","this","request","res","username","id","text","Home","className","Login","loginFunc","useState","password","formData","setFormData","handleChange","e","target","name","value","old","onChange","onClick","Signup","signupFunc","email","firstName","lastName","Friend","description","addFriendFunc","add","currentUser","useContext","INITIAL_STATE","evt","to","color","FriendsListContainer","friends","setFriends","fetch","setFetch","setAddStatus","useEffect","a","getAllFriends","getFriends","addFriend","allFriends","map","f","i","blank","Response","s","editFunc","deleteFunc","index","addResponseStatus","addScreenFunc","addFunc","edit","setEdit","toggleEdit","fData","disabled","autocomplete","ResponsesContainer","showResponses","responses","setResponses","setAddResponseStatus","addResponseScreen","getStatementInfo","statement","addResponse","statement_id","parseInt","addStatementResponse","editResponse","deleteResponse","length","Chat","spot","useParams","setText","addText","preventDefault","friend_id","sendStatement","success","t","undefined","style","textAlign","alt","src","avatar","autoComplete","type","Statement","input","useRef","setShowResponses","console","log","current","focus","ref","autoFocus","FriendInfoContainer","statements","setStatements","friend","setFriend","addStatus","history","useHistory","getFriendInfo","addStatement","addFriendStatement","editStatement","deleteStatement","editFriend","deleteFriend","push","fId","FaceChat","letter","setLetter","sentence","setSentence","recording","setRecording","talkable","setTalkable","synth","window","speechSynthesis","utterThis","SpeechSynthesisUtterance","voices","getVoices","voice","recognition","SpeechRecognition","webkitSpeechRecognition","onresult","event","transcript","results","info","display","alignItems","justifyContent","start","word","split","speak","myLoop","setTimeout","Settings","setReload","handleColorChange","API","updateUserInfo","getUserInfo","isAdmin","updateUser","Routes","path","exact","NavBar","logoutFunc","click","setClick","handleClick","closeMobileMenu","closeMobileGuest","App","setToken","setCurrentUser","reload","localStorage","getItem","jwt","decode","handleLogin","login","setItem","errors","handleSignup","signup","handleLogout","removeItem","user","userInfo","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70a4f38a.chunk.js","sourcesContent":["import React from \"react\";\n\n/** Context: provides currentUser object and setter for it throughout app. */\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","/** @format */\n\nimport axios from \"axios\";\n\nconst BASE_URL = \n  \"https://programafriend.herokuapp.com\" || \"http://localhost:3001\";\n\n\nclass Paf {\n  static token;\n  static username;\n\n  //Request builder.\n  static async request(endpoint, data = {}, method = \"get\") {\n    // console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { authorization: `Bearer ${Paf.token}` };\n    const params = method === \"get\" ? data : {};\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      // console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  ///////////////// USERS\n\n  //Login\n  static async login(data) {\n    let res = await this.request(`auth/login`, data, \"post\");\n    return res;\n  }\n\n  //Signup\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n\n    return res;\n  }\n\n  //Get user profile\n  static async getUserInfo(username) {\n    let res = await this.request(`users/${username}`);\n    return res;\n  }\n\n  //Update User Portfolio\n  static async updateUserInfo(data) {\n    let res = await this.request(`users/${this.username}`, data, \"patch\");\n    return res;\n  }\n\n  ///////////////// FRIENDS\n\n  //Add a friend for a user.\n  static async addFriend(data) {\n    let res = await this.request(`friends/${Paf.username}`, data, \"post\");\n    return res;\n  }\n\n  //Get all friends for a user.\n  static async getAllFriends(username) {\n    let res = await this.request(`friends/${username}`);\n    return res;\n  }\n\n  //Get info on a specific friend\n  static async getFriendInfo(id, username) {\n    let res = await this.request(`friends/${Paf.username}/${id}`);\n    return res;\n  }\n\n  //Edit info on a friend\n  static async editFriend(id, data) {\n    let res = await this.request(\n      `friends/${Paf.username}/${id}`,\n      data,\n      \"patch\"\n    );\n    return res;\n  }\n\n  //Delete user friend.\n  static async deleteFriend(id) {\n    let data;\n    let res = await this.request(\n      `friends/${Paf.username}/${id}`,\n      data,\n      \"delete\"\n    );\n    return res;\n  }\n\n  ///////////////// STATEMENTS\n\n  //Add a statement to a friend.\n  static async addFriendStatement(data) {\n    let res = await this.request(`statements/${Paf.username}`, data, \"post\");\n    return res;\n  }\n\n  //Get info on a statment.\n  static async getStatementInfo(id) {\n    let res = await this.request(`statements/${Paf.username}/${id}`);\n    return res;\n  }\n\n  //Edit info on a statement\n  static async editStatement(id, data) {\n    let res = await this.request(\n      `statements/${Paf.username}/${id}`,\n      data,\n      \"patch\"\n    );\n    return res;\n  }\n\n  //Delete a statment.\n  static async deleteStatement(id) {\n    let data;\n    let res = await this.request(\n      `statements/${Paf.username}/${id}`,\n      data,\n      \"delete\"\n    );\n    return res;\n  }\n\n  ///////////////// RESPONSES\n\n  //Add a new response to a statement.\n  static async addStatementResponse(data) {\n    let res = await this.request(`responses/${Paf.username}`, data, \"post\");\n    return res;\n  }\n\n  //Edit info on a response\n  static async editResponse(id, data) {\n    let res = await this.request(\n      `responses/${Paf.username}/${id}`,\n      data,\n      \"patch\"\n    );\n    return res;\n  }\n\n  //Delete a response.\n  static async deleteResponse(id) {\n    let data;\n    let res = await this.request(\n      `responses/${Paf.username}/${id}`,\n      data,\n      \"delete\"\n    );\n    return res;\n  }\n\n  ///////////////// CHAT\n\n  //Chat\n  static async sendStatement(text) {\n    let res = await this.request(`chat/${Paf.username}`, text, \"post\");\n    return res;\n  }\n}\n\nexport default Paf;\n","/** @format */\n\nimport React from \"react\";\nimport \"./Home.css\";\nimport \"../../App.css\";\n\n//Basic hero section\n\nfunction Home() {\n  return (\n    <div className=\"home-container\">\n      <div className=\"top-section\">\n        <h1>Spanish Speaking Robot</h1>\n        <p>Program your own Spanish speaking friend</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/** @format */\n\nimport React, {useState} from \"react\";\nimport \"./Login.css\";\n\n//Loginfunc is passed down from App.js as a prop. This component passes the loginfunc down to the form.\nfunction Login({loginFunc}) {\n  let [formData, setFormData] = useState({username: \"\", password: \"\"});\n\n  function handleChange(e) {\n    let {name, value} = e.target;\n    setFormData((old) => ({\n      ...old,\n      [name]: value,\n    }));\n  }\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"login-form\">\n        <h3 className=\"login-title\">Login</h3>\n        <input\n          className=\"login-input\"\n          value={formData.username}\n          name=\"username\"\n          onChange={(e) => handleChange(e)}\n        />\n        <input\n          className=\"login-input\"\n          value={formData.password}\n          name=\"password\"\n          onChange={(e) => handleChange(e)}\n        />\n        <button onClick={() => loginFunc(formData)}>Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","/** @format */\n\nimport React, {useState} from \"react\";\nimport \"./Signup.css\";\n\n//SignupFunc is passed down from App.js as a prop. This component passes the signupFunc down to the form.\n\nfunction Signup({signupFunc}) {\n  let [formData, setFormData] = useState({username: \"\", password: \"\", email: \"\", firstName:\"\", lastName:\"\"});\n\n  function handleChange(e) {\n    let {name, value} = e.target;\n    setFormData((old) => ({\n      ...old,\n      [name]: value,\n    }));\n  }\n  return (\n    <div className=\"signup-container\">\n      <form className=\"signup-form\">\n        <h3 className=\"signup-title\">Sign Up</h3>\n        <input\n          className=\"signup-input\"\n          value={formData.username}\n          name=\"username\"\n          onChange={(e) => handleChange(e)}\n        />\n        password\n        <input\n          className=\"signup-input\"\n          value={formData.password}\n          name=\"password\"\n          onChange={(e) => handleChange(e)}\n        />\n        firstname\n        <input\n          className=\"signup-input\"\n          value={formData.firstName}\n          name=\"firstName\"\n          onChange={(e) => handleChange(e)}\n        />\n        lastname\n        <input\n          className=\"signup-input\"\n          value={formData.lastName}\n          name=\"lastName\"\n          onChange={(e) => handleChange(e)}\n        />\n        email\n        <input\n          className=\"signup-input\"\n          value={formData.email}\n          name=\"email\"\n          onChange={(e) => handleChange(e)}\n        />\n        <button onClick={() => signupFunc(formData)}>Sign Up</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, {useState, useContext} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./Friend.css\";\nimport UserContext from \"../../UserContext\";\n\n//Renders individual friend. State for edit form and dropdown selections for each friend live here.\nfunction Friend({name, description, id, addFriendFunc, add = false}) {\n  const {currentUser} = useContext(UserContext);\n  const INITIAL_STATE = {name, description}\n  const [formData, setFormData] = useState(INITIAL_STATE);\n\n  const handleChange = (evt) => {\n    let {name, value} = evt.target;\n    setFormData((old) => (\n      {\n        ...old,\n        [name]: value\n      }\n    ))\n  }\n\n  if (add) {\n    return (\n      <div className=\"friend add-friend\">\n        <div className=\"add-friend-info\">\n          <input className=\"friend-name add-friend-input\" name='name' value={formData.name} onChange={(evt) => handleChange(evt)}/>\n          <input className=\"friend-description-main add-friend-input accent\" name='description' value={formData.description} onChange={(evt) => handleChange(evt)}/>\n        </div>\n        <span className=\"submit-friend\" onClick={() => addFriendFunc(formData)}>Save</span>\n      </div>\n    );\n  } else {\n    return (\n      <Link className=\"friend\" to={`/friend/${id}`}>\n        <h5 className=\"friend-name\">{name}</h5>\n        <p className={`friend-description-main accent ${currentUser.color}`}>{description}</p>\n      </Link>\n    );\n  }\n}\n\nexport default Friend;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport Friend from \"../../components/friend/Friend\";\nimport Paf from \"../../api.js\";\nimport \"./FriendsListContainer.css\";\n\n//Get and display friends.\n\nfunction FriendsListContainer({ username, color }) {\n  const [friends, setFriends] = useState([]);\n  const [fetch, setFetch] = useState(false);\n  const [setAddStatus] = useState(false);\n\n  //GET ALL Friends\n  useEffect(() => {\n      async function getFriends() {\n        let friends = await Paf.getAllFriends(username);\n        setFriends(friends);\n      }\n      getFriends();\n    },\n    [fetch, username]\n  );\n  //CREATE\n  const addFriend = async (formData) => {\n    await Paf.addFriend(formData);\n    setFetch((old) => !old)\n  };\n\n    //ADDS EMPTY STATEMENT FORM\n  function addFriendScreen() {\n    setAddStatus(true);\n    setFriends((old) => [...old, {blank: true}]);\n  }\n\n  //GENERATE FRIENDS\n  let allFriends = friends\n    ? friends.map((f, i) => {\n      if(f.blank){\n        return (\n          <Friend\n            name=''\n            description=''\n            key='999'\n            add={true}\n            addFriendFunc={addFriend}\n          />\n        );\n      }else{\n        return (\n          <Friend\n            name={f.name}\n            description={f.description}\n            id={f.id}\n            key={i}\n          />\n        );\n      }\n      })\n    : null;\n\n\n  //Returns list of all friends a user has created.\n  return (\n      <div className=\"friends-list\">\n        {allFriends}\n        <button className={`add-friend-button accent ${color}`} onClick={addFriendScreen}>+</button>\n      </div>\n  );\n}\n\nexport default FriendsListContainer;\n","\nimport React, {useState, useContext} from \"react\";\nimport \"./Response.css\";\nimport UserContext from '../../UserContext'\n//Renders an individual response.\nfunction Response({s, deleteFunc, editFunc, index, message, addResponseStatus, addScreenFunc, addFunc}) {\n  const [edit, setEdit] = useState(true);\n  const [formData, setFormData] = useState({response: s?.response});\n  const {currentUser} = useContext(UserContext)\n  function toggleEdit() {\n    setEdit((old) => !old);\n  }\n\n  //Handles form inputs, updates state from info in evt.target.\n  const handleChange = (evt) => {\n    const {name, value} = evt.target;\n    setFormData((fData) => ({\n      ...fData,\n      [name]: value,\n    }));\n  };\n\n\n  if(s){\n    return (\n      <div className=\"response\" key={s.id}>\n      <span className={`response-index`}>{index + 1}</span>\n        <input\n          value={formData.response}\n          disabled={edit}\n          name=\"response\"\n          onChange={handleChange}\n          className={`inputText ${edit ? '' : 'editable'}`}\n        />\n        <div className=\"response-options\">\n          <div\n            onClick={edit ? toggleEdit : () => {toggleEdit(); editFunc(s.id, formData)}}\n            className=\"response-edit\"\n          >\n            {edit ? <i className=\"fas fa-pen edit-statement\"></i>  : \"Save\"}\n          </div>\n          <div\n            onClick={edit ? toggleEdit : () => {editFunc(formData)}}\n            className=\"response-delete\"\n          >\n            {edit ? <i className=\"fa fa-trash-alt delete-statement\"></i> : \"Save\"}\n          </div>\n        </div>\n      </div>\n    );\n  } else if (addFunc){\n    return (\n      <div className=\"response\">\n      <span className=\"response-index\">{index + 1}</span>\n        <input\n          value={formData.response}\n          name=\"response\"\n          onChange={handleChange}\n          className=\"inputText editable\"\n          autocomplete=\"off\"\n        />\n        <div className=\"response-options\">\n          <div\n            onClick={() => {addFunc(formData)}}\n            className=\"response-delete\"\n          >\n            {\"Save\"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  else{\n    return (\n      <div className=\"response\" >\n        <span className=\"response-index\">{message}</span>\n        <div className=\"response-options\">\n          <button\n            className={`add-response ${currentUser?.color}`}\n            onClick={addScreenFunc}\n            disabled={addResponseStatus}\n          >\n            +\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Response;\n","import \"./ResponsesContainer.css\";\nimport React, {useState, useEffect} from \"react\";\nimport Paf from \"../../api.js\";\nimport Response from \"../../components/response/Response\";\n\n//All api requests regarding responses are initiated here. (CRUD)\nfunction ResponsesContainer({id, showResponses}) {\n  const [responses, setResponses] = useState([]);\n  const [addResponseStatus, setAddResponseStatus] = useState(false);\n  const [fetch, setFetch] = useState(false);\n\n  //ADDS EMPTY RESPONSE FORM\n  function addResponseScreen() {\n    setAddResponseStatus(true);\n    setResponses((old) => [...old, {blank: true}]);\n  }\n\n  //Get all responses upon render\n  useEffect(() => {\n    async function getStatementInfo() {\n      let statement = await Paf.getStatementInfo(id);\n      setResponses(statement.responses);\n      delete statement.responses;\n    }\n    getStatementInfo();\n  }, [fetch, id]);\n\n  //ADD RESPONSE\n  const addResponse = async (formData) => {\n    formData.statement_id = parseInt(id);\n    await Paf.addStatementResponse(formData);\n    setFetch((old) => !old);\n  };\n\n  // Edit RESPONSE\n  async function editResponse(id, data) {\n    await Paf.editResponse(id, data);\n    setFetch((old) => !old);\n  }\n\n  // Delete a response\n  async function deleteResponse(id) {\n    await Paf.deleteResponse(id);\n    setFetch((old) => !old);\n  }\n\n  if (responses.length) {\n    return (\n      <div\n        className={`responses-container ${\n          showResponses ? \"showResponses\" : \"\"\n        }`}\n      >\n        {responses.map((s, i) => {\n          if (s.blank) {\n            return (\n              <>\n                <Response addFunc={addResponse} key={i} index={i} />\n              </>\n            );\n          } else if (responses.length === i + 1) {\n            return (\n              <>\n                <Response\n                  s={s}\n                  deleteFunc={deleteResponse}\n                  editFunc={editResponse}\n                  key={s.id}\n                  index={i}\n                />\n                <Response\n                  message=\"\"\n                  addScreenFunc={addResponseScreen}\n                  addResponseStatus={addResponseStatus}\n                />\n              </>\n            );\n          } else {\n            return (\n              <Response\n                s={s}\n                deleteFunc={deleteResponse}\n                editFunc={editResponse}\n                key={s.id}\n                index={i}\n              />\n            );\n          }\n        })}\n      </div>\n    );\n  } else {\n    return (\n      <div\n        className={`responses-container ${\n          showResponses ? \"showResponses\" : \"\"\n        }`}\n      >\n        <Response\n          message=\"No responses have been added\"\n          addScreenFunc={addResponseScreen}\n          addResponseStatus={addResponseStatus}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ResponsesContainer;\n","export default __webpack_public_path__ + \"static/media/brain.fca87e63.jpg\";","/** @format */\n\nimport \"./Chat.css\";\nimport Paf from \"../../api.js\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport avatar from \"./brain.jpg\";\n\n//All api request regarding chatting are intiated here. (Paf.sendStatement)\n\nfunction Chat() {\n  const [formData, setFormData] = useState({ statement: \"\" });\n  const { id } = useParams();\n  const [text, setText] = useState([{ statement: \"lets chat\" }]);\n\n  //handles form inputs, inputs state. Controlled component\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setFormData((fData) => ({\n      ...fData,\n      [name]: value,\n    }));\n  };\n\n  //sends text to server, server responses with resposne.\n  const addText = async (evt) => {\n    evt.preventDefault();\n    setText((data) => [...data, formData]);\n    formData.friend_id = id;\n    let res = await Paf.sendStatement(formData);\n    setText((data) => [...data, { statement: res }]);\n    setFormData({ statement: \"\" });\n    return { success: true };\n  };\n\n  //spot toggles left to right. Allows for each users comment to be placed in the right spot.\n  let spot;\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-room-container\">\n        <ul className=\"chat-spot\">\n          {text.map((t, i) => {\n            switch (spot) {\n              case undefined:\n                spot = \"left\";\n                break;\n              case \"left\":\n                spot = \"right\";\n                break;\n              case \"right\":\n                spot = \"left\";\n                break;\n              default:\n                spot = \"left\";\n            }\n\n            return (\n              <li className=\"chat-text\" style={{ textAlign: spot }} key={i}>\n                {spot === \"left\" ? (\n                  <img alt=\"avatar\" className=\"chat-avatar\" src={avatar} />\n                ) : null}\n                {t.statement}\n              </li>\n            );\n          })}\n        </ul>\n\n        <form className=\"chat-form\" autoComplete=\"off\">\n          <input\n            type=\"text\"\n            name=\"statement\"\n            className=\"chat-input\"\n            value={formData.statement}\n            onChange={handleChange}\n            autoComplete=\"off\"\n          ></input>\n          <button className=\"chat-button\" onClick={addText}>\n            Send\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","import React, {useState, useContext, useRef} from \"react\";\nimport \"./statement.css\";\nimport ResponsesContainer from \"../../screens/responses-container/ResponsesContainer\";\nimport UserContext from '../../UserContext'\n//Generates display for each individual statement.\n\nfunction Statement({statement, id, editFunc, deleteFunc, addFunc, add, index}) {\n  const [edit, setEdit] = useState(true);\n  const input = useRef(null)\n  const [formData, setFormData] = useState({statement});\n  const [showResponses, setShowResponses] = useState(false)\n  const {currentUser} = useContext(UserContext)\n  function toggleEdit() {\n    setEdit((old) => !old);\n  }\n\n  function handleFocus(){\n    console.log(input.current)\n    input.current.focus();\n  }\n\n  if(!edit){\n    handleFocus();\n    console.log('focused')\n  }\n  \n  //Handles form inputs, updates state from info in evt.target.\n  const handleChange = (evt) => {\n    const {name, value} = evt.target;\n    setFormData((fData) => ({\n      ...fData,\n      [name]: value,\n    }));\n  };\n\n  if(add){\n    return (\n      <div className=\"statements-responses-container\">\n        <div className=\"statement-container\">\n          <input value={formData.statement} name=\"statement\" onChange={handleChange} className=\"statement\"/>\n          <div className=\"statement-options\">\n            <div\n              className=\"delete-statement\"\n              onClick={() => addFunc(formData)}\n            >\n              {\"Save\"}\n            </div>\n          </div>\n        </div>\n        <ResponsesContainer id={id} showResponses={showResponses}/>\n      </div>\n    );  \n  }else{\n    return (\n      <div className=\"statements-responses-container\" >\n        <div className=\"statement-container\">\n        <i className={`fa ${showResponses ? 'fa-chevron-up' : 'fa-chevron-down'} index ${currentUser?.color}`} onClick={() => setShowResponses((old) => !old)}></i>\n          <input type='text' ref={input} value={formData.statement} disabled={edit} name=\"statement\" onChange={handleChange} className={`statement ${edit ? '' : 'editable'}`} autoComplete=\"off\" autoFocus/>\n          <div className=\"statement-options\">\n            <div\n              className=\"edit-statement\"\n              onClick={ edit ? (evt) => {toggleEdit();} : () => { toggleEdit(); editFunc(id, formData); }}\n            >\n              {edit ? <i className=\"fas fa-pen edit-statement\"></i> : \"Save\"}\n            </div>\n            <div\n              className=\"delete-statement\"\n              onClick={() => deleteFunc(id)}\n            >\n              {edit ? <i className=\"fa fa-trash-alt delete-statement\"></i> : \"\"}\n            </div>\n          </div>\n        </div>\n        <ResponsesContainer id={id} showResponses={showResponses}/>\n      </div>\n    );\n  }\n\n}\n\nexport default Statement;\n","import React, {useState, useEffect} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Paf from \"../../api.js\";\nimport Statement from \"../../components/statement/Statement\";\nimport {Link} from \"react-router-dom\";\nimport \"./FriendInfoContainer.css\";\nimport {useHistory} from 'react-router-dom'\n\n//Should gather all info on friend and statements from here. (CRUD)\nfunction FriendInfoContainer({color}) {\n  const {id} = useParams();\n  const [statements, setStatements] = useState([]);\n  const [friend, setFriend] = useState();\n  const [edit, setEdit] = useState(true);\n  const [formData, setFormData] = useState({name: '', description: ''});\n  const [addStatus, setAddStatus] = useState(false);\n  const [fetch, setFetch] = useState(false);\n  const history = useHistory();\n\n  //TOGGLE FRIEND EDIT\n  function toggleEdit() {\n    setEdit((old) => !old);\n  }\n\n  //HANDLES FORM INPUTS\n  const handleChange = (evt) => {\n    const {name, value} = evt.target;\n    setFormData((fData) => ({\n      ...fData,\n      [name]: value,\n    }));\n  };\n\n  //GET FRIEND AND STATEMENTS\n  useEffect(() => {\n    async function getFriendInfo() {\n      let friend = await Paf.getFriendInfo(id);\n      setFormData(() => ({name: friend.name, description: friend.description}));\n      setFriend(friend);\n      setStatements(friend.statements);\n    }\n    getFriendInfo();\n  }, [fetch, id]);\n\n  //ADD STATEMENT\n  const addStatement = async (formData) => {\n    formData.friend_id = parseInt(id);\n    await Paf.addFriendStatement(formData);\n    setFetch((old) => !old);\n  };\n\n  // EDIT STATEMENT\n  async function editStatement(id, data) {\n    await Paf.editStatement(id, data);\n    setFetch((old) => !old);\n  }\n\n  // DELETE STATEMENT\n  async function deleteStatement(id) {\n    await Paf.deleteStatement(id);\n    setFetch((old) => !old);\n  }\n\n  //UPDATE FRIEND\n  async function editFriend() {\n    await Paf.editFriend(friend.id, formData);\n    setFetch((old) => !old);\n  }\n\n  //DELETE FRIEND\n  async function deleteFriend() {\n    await Paf.deleteFriend(id);\n    history.push(\"/\");\n  }\n\n  //ADDS EMPTY STATEMENT FORM\n  function addStatementScreen() {\n    setAddStatus(true);\n    setStatements((old) => [...old, {blank: true}]);\n  }\n\n  return (\n    <div className=\"friend-container\">\n      <div className=\"friend-info\">\n        <form className=\"friend-form\">\n          <input\n            type=\"text\"\n            value={formData?.name}\n            disabled={edit}\n            name=\"name\"\n            onChange={handleChange}\n            className=\"inputed friend-name\"\n          />\n          <input\n            type=\"text\"\n            value={formData?.description}\n            disabled={edit}\n            name=\"description\"\n            onChange={handleChange}\n            className={`inputed main-friend-description ${color}`}\n          />\n        </form>\n        <div className=\"friend-options\">\n          <Link\n            to={`/chat/${friend?.id}`}\n            className=\"text-chat icon\"\n          >\n            <i className=\"fas fa-comment-dots text-chat\"></i>\n            <span className=\"icon-description\">Text Chat</span>\n          </Link>\n          <Link\n            to={`/facechat/${friend?.id}`}\n            className=\"face-chat icon\"\n          >\n            <i className=\"fas fa-microphone face-chat\"></i>\n            <span className=\"icon-description\">Face Chat</span>\n          </Link>\n          <div onClick={edit ? toggleEdit : editFriend} className=\"edit-friend icon\">\n            {edit ? <i className=\"fas fa-pen edit-friend\"></i> : \"Save\"}\n            <span className=\"icon-description\">Edit Info</span>\n          </div>\n          <i className=\"fa fa-trash-alt delete-friend icon\" onClick={deleteFriend}>\n            <span className=\"icon-description\">Delete Friend</span>\n          </i>\n        </div>\n      </div>\n      <div className=\"statements-container\" id=\"spot\">\n        {statements.map((s, i) => {\n          if (s.blank) {\n            return (\n              <Statement\n                addFunc={addStatement}\n                key={i}\n                add={true}\n                statement=\"\"\n                index={i}\n              />\n            );\n          } else {\n            return (\n              <Statement\n                statement={s.statement}\n                id={s.id}\n                editFunc={editStatement}\n                deleteFunc={deleteStatement}\n                fId={id}\n                key={s.id}\n                add={false}\n                index={i}\n              />\n            );\n          }\n        })}\n      </div>\n      <button\n        className={`add-statement ${color}`}\n        onClick={addStatementScreen}\n        disabled={addStatus}\n      >\n        +\n      </button>\n    </div>\n  );\n}\n\nexport default FriendInfoContainer;\n","/** @format */\n\nimport React, {useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport \"./facechat.css\";\nimport Paf from \"../../api.js\";\n\nfunction FaceChat() {\n  const [letter, setLetter] = useState(\"base\");\n  const [sentence, setSentence] = useState(\"shut up please bitch\");\n  const [recording, setRecording] = useState(\"blank\");\n  const [talkable, setTalkable] = useState(\"talk\");\n  const {id} = useParams();\n\n  var synth = window.speechSynthesis;\n  // let senArray = sentence.split(\"\");\n  var utterThis = new SpeechSynthesisUtterance(sentence);\n  let voices = synth.getVoices();\n  utterThis.voice = voices[15];\n  const SpeechRecognition =\n    window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = new SpeechRecognition();\n  console.log(recognition);\n  // console.log(image)\n  //sets the next letter\n  // function speak() {\n  //   let id = setInterval(() => {\n  //     setLetter((old) => {\n  //       if (letter > senArray.length) {\n  //         clearInterval(id);\n  //         return 1;\n  //       } else {\n  //         return old + 1;\n  //       }\n  //     });\n  //   }, 75);\n  //   synth.speak(utterThis);\n  // }\n\n  // useEffect(() => {\n  //   var i = 1;\n  //   let word = sentence.split('')\n\n  //   function myLoop() {\n  //     setTimeout(function () {\n  //       setLetter((word[i]));\n  //       i++;\n  //       if (i < 10) {\n  //         myLoop();\n  //       }\n  //     }, 100);\n  //   }\n\n  //   myLoop();\n  // }, [sentence]);\n\n  function speak() {\n    var i = 1;\n    let word = sentence.split(\"\");\n\n    function myLoop() {\n      setTimeout(function () {\n        setLetter(word[i]);\n        i++;\n        if (i < 10) {\n          myLoop();\n        }\n      }, 100);\n    }\n    synth.speak(utterThis);\n    myLoop();\n  }\n\n  //sets the image\n  // useEffect(() => {\n  //   setImage((old) => {\n  //     let spot = letter;\n  //     if (!spot) {\n  //       spot = 'a';\n  //     }\n  //     return spot;\n  //   });\n  // }, [letter]);\n\n  //sends text to server, server responses with resposne.\n  // const addText = async (evt) => {\n  //   evt.preventDefault();\n  //   setText((data) => [...data, formData]);\n  //   formData.friend_id = id;\n  //   let res = await Paf.sendStatement(formData);\n  //   setText((data) => [...data, { statement: res }]);\n  //   setFormData({ statement: \"\" });\n  //   return { success: true };\n  // };\n\n  function startListening() {\n    setRecording(\"recording\");\n    setTalkable(\"no\");\n    recognition.start();\n  }\n\n  recognition.onresult = function (event) {\n    setRecording(\"blank\");\n    setTalkable(\"talk\");\n    var transcript = event.results[0][0].transcript;\n    // var confidence = event.results[0][0].confidence;\n    setSentence(transcript);\n    // sends text to server, server responses with resposne.\n    const addText = async () => {\n      let info = {\n        statement: transcript,\n        friend_id: id,\n      };\n      let res = await Paf.sendStatement(info);\n      setSentence(res);\n    };\n    addText();\n  };\n\n  return (\n    <div className=\"head-container\">\n      <div className=\"head\">\n        <div className=\"eyes\">\n          <div className=\"eyeball\"></div>\n          <div className=\"eyeball\"></div>\n        </div>\n        <div className={`mouth ${letter}`}></div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <div\n          onClick={startListening}\n          className={`startRecording ${recording}`}\n        ></div>\n        <div onClick={speak} className={`${talkable}`}>\n          {\">\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FaceChat;\n","import React, {useState, useEffect, useContext} from \"react\";\nimport \"./Settings.css\";\nimport API from \"../../api\";\nimport UserContext from \"../../UserContext\";\n\nfunction Settings({username}) {\n  const {setReload, currentUser} = useContext(UserContext);\n  const [formData, setFormData] = useState();\n\n  //Handles form inputs, updates state from info in evt.target.\n  const handleChange = (evt) => {\n    const {name, value} = evt.target;\n    setFormData((fData) => ({\n      ...fData,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    async function getUserInfo() {\n      let info = await API.getUserInfo(username);\n      delete info.isAdmin;\n      setFormData(info);\n    }\n    getUserInfo();\n  }, [username]);\n\n  function handleColorChange(color) {\n    setFormData((fData) => ({\n      ...fData,\n      color: color,\n    }));\n  }\n\n  async function updateUser() {\n    await API.updateUserInfo(formData);\n    setReload((old) => !old);\n  }\n\n  return (\n    <div className=\"settings-container\">\n      <div className=\"user-info-container\">\n        Username:\n        <input\n          value={formData?.username}\n          name=\"username\"\n          onChange={handleChange}\n          className=\"user-info\"\n        />\n        Lastname:\n        <input\n          value={formData?.lastName}\n          name=\"lastName\"\n          onChange={handleChange}\n          className=\"user-info\"\n        />\n        Firstname:\n        <input\n          value={formData?.firstName}\n          name=\"firstName\"\n          onChange={handleChange}\n          className=\"user-info\"\n        />\n        Email:\n        <input\n          value={formData?.email}\n          name=\"email\"\n          onChange={handleChange}\n          className=\"user-info\"\n        />\n      </div>\n      <div className=\"colors\">\n        <div className={`color orange ${formData?.color === 'orange' ? 'chosen' : ''}`} onClick={() => handleColorChange('orange')}></div>\n        <div className={`color blue ${formData?.color === 'blue' ? 'chosen' : ''}`} onClick={() => handleColorChange('blue')}></div>\n        <div className={`color green ${formData?.color === 'green' ? 'chosen' : ''}`} onClick={() => handleColorChange('green')}></div>\n      </div>\n      <button className={`submit-user-info ${currentUser.color}`} onClick={() => updateUser()}>\n        Edit User Info\n      </button>\n    </div>\n  );\n}\n\nexport default Settings;\n","/** @format */\n\nimport React, {useContext} from \"react\";\nimport {Switch, Redirect, Route} from \"react-router-dom\";\nimport UserContext from \"../UserContext\";\nimport Home from \"../screens/home/Home\";\nimport Login from \"../auth/Login\";\nimport Signup from \"../auth/Signup\";\nimport FriendsC from \"../screens/friends-list-container/FriendsListContainer\";\nimport ResponseC from \"../screens/responses-container/ResponsesContainer\";\nimport Chat from \"../screens/text-chat/Chat\";\nimport StatementC from \"../screens/friend-info-container/FriendInfoContainer\";\nimport Facechat from \"../screens/face-chat/FaceChat\";\nimport Settings from \"../screens/settings/Settings\";\n//Handles all front end routing. Some routes are protected by UserContext(logged in or not)\nfunction Routes({loginFunc, signupFunc}) {\n  const {currentUser} = useContext(UserContext);\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        {!currentUser ? <Home /> : <Redirect to=\"/friends\" />}\n      </Route>\n      <Route path=\"/friend/:id\" exact>\n        <StatementC color={currentUser?.color}/>\n      </Route>\n      <Route path=\"/responses/:id\" exact>\n        <ResponseC />\n      </Route>\n      <Route path=\"/chat/:id\" exact>\n        <Chat />\n      </Route>\n      <Route path=\"/facechat/:id\" exact>\n        <Facechat />\n      </Route>\n      <Route path=\"/settings\" exact>\n                {currentUser ? (\n          <Settings username={currentUser.username} />\n        ) : (\n          <Redirect to=\"/\" />\n        )}\n      </Route>\n      <Route path=\"/friends\" exact>\n        {currentUser ? (\n          <FriendsC username={currentUser.username}  color={currentUser.color}/>\n        ) : (\n          <Redirect to=\"/\" />\n        )}\n      </Route>\n      <Route path=\"/login\" exact>\n        {currentUser ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Login loginFunc={(f) => loginFunc(f)} />\n        )}\n      </Route>\n      <Route path=\"/sign-up\" exact>\n        {currentUser ? (\n          <Redirect to=\"/friends\" />\n        ) : (\n          <Signup signupFunc={(f) => signupFunc(f)} />\n        )}\n      </Route>\n      <Route path=\"/\">\n        {currentUser ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Signup signupFunc={(f) => signupFunc(f)} />\n        )}\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React, {useState, useContext} from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport UserContext from \".././UserContext\";\nimport \"./Navbar.css\";\n\n//Context is consumed here to determine login status.\n\nfunction NavBar({logoutFunc, loginFunc}) {\n  const {currentUser} = useContext(UserContext);\n\n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click);\n\n  const closeMobileMenu = () => setClick(false);\n\n  const closeMobileGuest = () => {\n    setClick(false);\n    loginFunc({username: \"guest\", password: \"guest55\"});\n  };\n\n  //Generate nav for logged in users.\n  function loggedInNav() {\n    return (\n      <nav className=\"nav-container\">\n        <NavLink to=\"/\" exact className=\"nav-logo\" onClick={closeMobileMenu}>\n          Spanish{\" \"}\n          <div\n            style={{display: \"inline\"}}\n            className={`accent ${currentUser.color}`}\n          >\n            Partner\n          </div>\n        </NavLink>\n        <div className=\"nav-hamburger\" onClick={handleClick}>\n          <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\n        </div>\n        <div className={click ? \"nav-links\" : \"nav-links\"}>\n          <NavLink\n            to=\"/friends\"\n            className={`nav-link ${currentUser.color}`}\n            onClick={closeMobileMenu}\n          >\n            Friends\n          </NavLink>\n          <NavLink\n            to=\"/sign-up\"\n            className={`nav-link ${currentUser.color}`}\n            onClick={logoutFunc}\n          >\n            Logout\n          </NavLink>\n          <NavLink to=\"/settings\" className={`nav-link ${currentUser.color}`}>\n            <i className=\"fas fa-cog\" style={{color: \"white\"}}></i>\n          </NavLink>\n        </div>\n      </nav>\n    );\n  }\n\n  //Generate nav for logged out users.\n  function loggedOutNav() {\n    return (\n      <nav className=\"nav-container\">\n        <Link\n          to=\"/\"\n          className=\"nav-logo\"\n          onClick={closeMobileMenu}\n        >\n          Spanish{\" \"}\n          <div style={{color: \"#1fa58a\", display: \"inline\"}}>Partner</div>\n        </Link>\n        <div className=\"nav-hamburger\">\n          <i\n            className={click ? \"fas fa-times\" : \"fas fa-bars\"}\n            onClick={handleClick}\n          />\n        </div>\n        <div className={click ? \"nav-links active\" : \"nav-links\"}>\n          <div className=\"nav-link\" onClick={closeMobileGuest}>\n            Try as guest\n          </div>\n          <Link\n            to=\"/login\"\n            className=\"nav-link\"\n            onClick={closeMobileMenu}\n          >\n            Login\n          </Link>\n          <Link\n            to=\"/sign-up\"\n            className=\"nav-link\"\n            onClick={closeMobileMenu}\n          >\n            Sign Up\n          </Link>\n        </div>\n      </nav>\n    );\n  }\n  //Check if logged in or not from context.\n  return currentUser ? loggedInNav() : loggedOutNav();\n}\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport UserContext from \"./UserContext\";\nimport jwt from \"jsonwebtoken\";\nimport Paf from \"./api.js\";\nimport Routes from \"./nav/Routes\";\nimport Navbar from \"./nav/Navbar\";\nimport \"./App.css\";\n\n//API calls for (signup, login, user fetch) are initiated from this container.\n//API calls are truly called from the Paf class located in /api.js\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [reload, setReload] = useState(false);\n\n  //If token is not in state, check local storage and update state. Update Paf class static token variable.\n  if (!token && localStorage.getItem(\"token\")) {\n    setToken(localStorage.getItem(\"token\"));\n    Paf.token = localStorage.getItem(\"token\");\n    let { username } = jwt.decode(Paf.token);\n    Paf.username = username;\n  }\n\n  //LOGIN. Call api -> setToken in state -> set token in localStorage -> Return {\"success\" : true or false}.\n  let handleLogin = async (formData) => {\n    try {\n      let res = await Paf.login(formData);\n      Paf.token = res.token;\n      let { username } = jwt.decode(Paf.token);\n      Paf.username = username;\n      setToken(res.token);\n      localStorage.setItem(\"token\", res.token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\");\n      return { success: false, errors };\n    }\n  };\n\n  //SIGN UP. Call api -> setToken in state -> set token in localStorage -> Return {\"success\" : true or false}.\n  let handleSignup = async (formData) => {\n    try {\n      let res = await Paf.signup(formData);\n      setToken(res.token);\n      localStorage.setItem(\"token\", res.token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"signup failed\");\n      return { success: false, errors };\n    }\n  };\n\n  //LOGOUT. Clear state and local storage.\n  let handleLogout = async () => {\n    setToken(null);\n    setCurrentUser(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  //If token state changes from intial null value, decode token for username, request user infomation from API and set currentUser state. username is decoded from jwt.\n  useEffect(\n    function () {\n      async function userInfo() {\n        let { username } = jwt.decode(token);\n        try {\n          let user = await Paf.getUserInfo(username);\n          setCurrentUser(user);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n      //Only call this if there is a token present.\n      if (token) {\n        userInfo();\n      }\n    },\n    [token, reload]\n  );\n\n  return (\n    <UserContext.Provider value={{ currentUser, setCurrentUser, setReload }}>\n      <Navbar\n        logoutFunc={(f) => handleLogout(f)}\n        loginFunc={(f) => handleLogin(f)}\n      />\n      <Routes\n        loginFunc={(f) => handleLogin(f)}\n        signupFunc={(f) => handleSignup(f)}\n      />\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n//Simply renders App wrapped in BrowserRouter as Router.\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}